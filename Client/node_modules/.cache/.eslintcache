[{"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\index.tsx":"1","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\serviceWorker.js":"2","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\App.tsx":"3","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\context\\auth-context.tsx":"4","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\context\\theme-context.tsx":"5","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\context\\loader-context.tsx":"6","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\reducers\\index.ts":"7","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\service\\http-service.ts":"8","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\home.tsx":"9","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\create-group\\create-group-component.tsx":"10","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\alert-component.tsx":"11","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\header-component.tsx":"12","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\login\\login-component.tsx":"13","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\websocket\\websocket-main-component.tsx":"14","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\websocket\\video-component.tsx":"15","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\register\\register-user.tsx":"16","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\reducers\\initial-store-state.ts":"17","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\middleware\\ws-middleware.ts":"18","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\utils\\uuid-generator.ts":"19","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\utils\\type-message-enum.ts":"20","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\utils\\rtc-action-enum.ts":"21","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\utils\\enable-dark-mode.ts":"22","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\config\\websocket-config.ts":"23","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\interface-contract\\rtc-transport-model.ts":"24","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\footer-component.tsx":"25","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\websocket\\websocket-group-actions-component.tsx":"26","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\custom-material-textfield.tsx":"27","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\websocket\\websocket-groups-component.tsx":"28","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\websocket\\websocket-chat-component.tsx":"29","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\context\\ws-context.tsx":"30","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\video\\video-control.tsx":"31","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\video\\empty-room.tsx":"32","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\video\\call-ended.tsx":"33","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\video\\sound-control.tsx":"34","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\video\\hang-up-control.tsx":"35","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\utils\\transport-action-enum.ts":"36","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\utils\\play-sound-notification.ts":"37","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\all-users-dialog.tsx":"38","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\skeleten-loader.tsx":"39","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\video\\active-video-call.tsx":"40","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\interface-contract\\transport-model.ts":"41","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\no-data-component.tsx":"42","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\websocket\\call-window-component.tsx":"43","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\image-preview.tsx":"44","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\utils\\string-size-calculator.ts":"45","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\websocket\\group-action-enum.ts":"46","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\utils\\date-formater.ts":"47","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\utils\\type-group-enum.ts":"48"},{"size":952,"mtime":1675952021899,"results":"49","hashOfConfig":"50"},{"size":4779,"mtime":1675952021915,"results":"51","hashOfConfig":"50"},{"size":1682,"mtime":1675952021870,"results":"52","hashOfConfig":"50"},{"size":1539,"mtime":1675952021896,"results":"53","hashOfConfig":"50"},{"size":837,"mtime":1675952021897,"results":"54","hashOfConfig":"50"},{"size":644,"mtime":1675952021896,"results":"55","hashOfConfig":"50"},{"size":6465,"mtime":1675952021912,"results":"56","hashOfConfig":"50"},{"size":3455,"mtime":1675952021915,"results":"57","hashOfConfig":"50"},{"size":1276,"mtime":1675952021873,"results":"58","hashOfConfig":"50"},{"size":2890,"mtime":1675952021873,"results":"59","hashOfConfig":"50"},{"size":1184,"mtime":1675952021875,"results":"60","hashOfConfig":"50"},{"size":4758,"mtime":1675952021878,"results":"61","hashOfConfig":"50"},{"size":3979,"mtime":1675952021874,"results":"62","hashOfConfig":"50"},{"size":1986,"mtime":1675952021893,"results":"63","hashOfConfig":"50"},{"size":7595,"mtime":1675952021890,"results":"64","hashOfConfig":"50"},{"size":8757,"mtime":1676108633758,"results":"65","hashOfConfig":"50"},{"size":714,"mtime":1675952021913,"results":"66","hashOfConfig":"50"},{"size":344,"mtime":1675952021911,"results":"67","hashOfConfig":"50"},{"size":733,"mtime":1675952021921,"results":"68","hashOfConfig":"50"},{"size":53,"mtime":1675952021920,"results":"69","hashOfConfig":"50"},{"size":370,"mtime":1675952021918,"results":"70","hashOfConfig":"50"},{"size":512,"mtime":1675952021887,"results":"71","hashOfConfig":"50"},{"size":678,"mtime":1675952021895,"results":"72","hashOfConfig":"50"},{"size":478,"mtime":1675952021905,"results":"73","hashOfConfig":"50"},{"size":692,"mtime":1675952021877,"results":"74","hashOfConfig":"50"},{"size":10715,"mtime":1675952021892,"results":"75","hashOfConfig":"50"},{"size":2235,"mtime":1675952021876,"results":"76","hashOfConfig":"50"},{"size":6303,"mtime":1675952021893,"results":"77","hashOfConfig":"50"},{"size":12455,"mtime":1675952021891,"results":"78","hashOfConfig":"50"},{"size":4660,"mtime":1675952021898,"results":"79","hashOfConfig":"50"},{"size":885,"mtime":1675952021884,"results":"80","hashOfConfig":"50"},{"size":824,"mtime":1675952021882,"results":"81","hashOfConfig":"50"},{"size":769,"mtime":1675952021881,"results":"82","hashOfConfig":"50"},{"size":614,"mtime":1675952021883,"results":"83","hashOfConfig":"50"},{"size":446,"mtime":1675952021882,"results":"84","hashOfConfig":"50"},{"size":460,"mtime":1675952021919,"results":"85","hashOfConfig":"50"},{"size":107,"mtime":1675952021887,"results":"86","hashOfConfig":"50"},{"size":1936,"mtime":1675952021876,"results":"87","hashOfConfig":"50"},{"size":671,"mtime":1675952021880,"results":"88","hashOfConfig":"50"},{"size":876,"mtime":1675952021881,"results":"89","hashOfConfig":"50"},{"size":635,"mtime":1675952021906,"results":"90","hashOfConfig":"50"},{"size":556,"mtime":1675952021879,"results":"91","hashOfConfig":"50"},{"size":2616,"mtime":1675952021888,"results":"92","hashOfConfig":"50"},{"size":3092,"mtime":1675952021879,"results":"93","hashOfConfig":"50"},{"size":98,"mtime":1675952021918,"results":"94","hashOfConfig":"50"},{"size":85,"mtime":1675952021889,"results":"95","hashOfConfig":"50"},{"size":949,"mtime":1675952021916,"results":"96","hashOfConfig":"50"},{"size":73,"mtime":1675952021919,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"spp5im",{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"100"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"100"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\index.tsx",[],[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\serviceWorker.js",["213","214","215"],"// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this interface-contract and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === \"localhost\" ||\r\n\t// [::1] is the IPv6 localhost address.\r\n\twindow.location.hostname === \"[::1]\" ||\r\n\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\twindow.location.hostname.match(\r\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t)\r\n)\r\n\r\nexport function register (config) {\r\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\twindow.addEventListener(\"load\", () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\r\n\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\r\n\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\")\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error(\"Error during service worker registration:\", error)\r\n\t\t})\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { \"Service-Worker\": \"script\" }\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get(\"content-type\")\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload()\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\r\n\t\t\t)\r\n\t\t})\r\n}\r\n\r\nexport function unregister () {\r\n\tif (\"serviceWorker\" in navigator) {\r\n\t\tnavigator.serviceWorker.ready\r\n\t\t\t.then(registration => {\r\n\t\t\t\tregistration.unregister()\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.error(error.message)\r\n\t\t\t})\r\n\t}\r\n}\r\n",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\App.tsx",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\context\\auth-context.tsx",["216"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { setAlerts, setAuthLoading, setUserId, setUserWsToken, setWsUserGroups } from \"../reducers\"\r\nimport { HttpService } from \"../service/http-service\"\r\nimport { IUser } from \"../interface-contract/user/user-model\"\r\n\r\ntype AuthContextType = {\r\n  user: IUser | undefined\r\n  setUser: (user: IUser | undefined) => void\r\n}\r\n\r\nexport const AuthContext = React.createContext<AuthContextType>({} as AuthContextType)\r\n\r\nexport const AuthContextProvider: React.FunctionComponent<any> = ({ children }) => {\r\n  const [user, setUser] = useState<IUser | undefined>()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    async function authInit () {\r\n\t try {\r\n\r\n\t   const response = await new HttpService().pingRoute()\r\n\t   const {\r\n\t\tuser,\r\n\t\tgroupsWrapper\r\n\t   } = response.data\r\n\t   setUser(user)\r\n\t   dispatch(setUserWsToken({ wsToken: user.wsToken }))\r\n\t   dispatch(setUserId({ userId: user.id }))\r\n\t   dispatch(setWsUserGroups({ groups: groupsWrapper }))\r\n\t } catch (error) {\r\n\t   dispatch(setAlerts({\r\n\t\talert: {\r\n\t\t  isOpen: true,\r\n\t\t  alert: \"warning\",\r\n\t\t  text: \"You are not authenticated.\"\r\n\t\t}\r\n\t   }))\r\n\t } finally {\r\n\t   dispatch(setAuthLoading({ isLoading: false }))\r\n\t }\r\n    }\r\n\r\n    authInit()\r\n  }, [])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n\t user,\r\n\t setUser\r\n    }}>\r\n\t {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAuthContext = (): AuthContextType => useContext(AuthContext)\r\n","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\context\\theme-context.tsx",["217"],"import React, { useContext, useState } from \"react\"\r\nimport { useCookies } from \"react-cookie\"\r\n\r\ntype Theme = \"light\" | \"dark\";\r\ntype ThemeContextType = { theme: Theme; toggleTheme: () => void };\r\n\r\nexport const ThemeContext = React.createContext<ThemeContextType>(\r\n  {} as ThemeContextType\r\n)\r\n\r\nexport const ThemeProvider: React.FunctionComponent<any> = ({ children }) => {\r\n  const [cookies] = useCookies([\"pref-theme\"])\r\n  const [theme, setTheme] = useState<Theme>(cookies[\"pref-theme\"] ? cookies[\"pref-theme\"] : \"light\")\r\n  const toggleTheme = () => {\r\n    setTheme(theme === \"light\" ? \"dark\" : \"light\")\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{\r\n\t theme,\r\n\t toggleTheme\r\n    }}>\r\n\t {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useThemeContext = (): ThemeContextType => useContext(ThemeContext)\r\n","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\context\\loader-context.tsx",["218"],"import React, { useContext, useState } from \"react\"\r\n\r\nconst defaultStatus = false\r\n\r\ntype LoaderContextType = {\r\n    loading: boolean;\r\n    setLoading: (isLoading: boolean) => void\r\n};\r\n\r\nconst LoaderContext = React.createContext<LoaderContextType>(\r\n    {} as LoaderContextType\r\n)\r\n\r\nexport const LoaderProvider: React.FunctionComponent<any> = ({ children }) => {\r\n\tconst [loading, setLoading] = useState<boolean>(defaultStatus)\r\n\treturn (\r\n\t\t<LoaderContext.Provider value={ { loading, setLoading } }>\r\n\t\t\t{ children }\r\n\t\t</LoaderContext.Provider>\r\n\t)\r\n}\r\n\r\nexport const useLoaderContext = (): LoaderContextType => useContext(LoaderContext)\r\n","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\reducers\\index.ts",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\service\\http-service.ts",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\home.tsx",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\create-group\\create-group-component.tsx",["219","220","221","222"],"import { Button, Container, CssBaseline, Grid, Typography } from \"@mui/material\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useThemeContext } from \"../../context/theme-context\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { createGroup, setAlerts } from \"../../reducers\"\r\nimport { CustomTextField } from \"../partials/custom-material-textfield\"\r\nimport { HttpService } from \"../../service/http-service\"\r\n\r\nexport const CreateGroupComponent = () => {\r\n  const history = useHistory()\r\n  const [groupName, setGroupName] = useState(\"\")\r\n  const { theme } = useThemeContext()\r\n  const dispatch = useDispatch()\r\n  const httpService = new HttpService()\r\n\r\n  useEffect(() => {\r\n    document.title = \"Create group | FLM\"\r\n  }, [])\r\n\r\n  function handleChange (event: any) {\r\n    event.preventDefault()\r\n    setGroupName(event.target.value)\r\n  }\r\n\r\n  async function createGroupByName (event: any) {\r\n    event.preventDefault()\r\n    if (groupName !== \"\") {\r\n\tconst res =  await httpService.createGroup(groupName)\r\n\t dispatch(setAlerts({\r\n\t   alert: {\r\n\t\tisOpen: true,\r\n\t\talert: \"success\",\r\n\t\ttext: `Group \"${groupName}\" has been created successfully`\r\n\t   }\r\n\t }))\r\n\t dispatch(createGroup({ group: res.data }))\r\n\t history.push({\r\n\t   pathname: \"/t/messages/\" + res.data.url\r\n\t })\r\n\t // setAlerts([...alerts, new FeedbackModel(UUIDv4(), `Cannot create group \"${groupName}\" : ${err.toString()}`, \"error\", true)])\r\n    }\r\n  }\r\n\r\n  function submitGroupCreation (event: any) {\r\n    if (event.key === undefined || event.key === \"Enter\") {\r\n\t if (groupName === \"\") {\r\n\t   return\r\n\t }\r\n\t createGroupByName(event)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={theme}\r\n\t    style={{\r\n\t\t height: \"calc(100% - 64px)\",\r\n\t\t textAlign: \"center\",\r\n\t\t paddingTop: \"40px\"\r\n\t    }}>\r\n\t <Container className={\"clrcstm\"} component=\"main\" maxWidth=\"xs\">\r\n\t   <CssBaseline/>\r\n\t   <div className={\"main-register-form clrcstm\"}>\r\n\t\t<Typography className={\"clrcstm\"} variant=\"h6\">\r\n\t\t  Create a group\r\n\t\t</Typography>\r\n\t   </div>\r\n\t   <div className={\"clrcstm\"}>\r\n\t\t<Grid className={\"clrcstm\"} container spacing={2}>\r\n\t\t  <Grid className={\"clrcstm\"} item xs={12}>\r\n\t\t    <CustomTextField id={\"createGroupMessenger\"}\r\n\t\t\t\t\t\t label={\"Type a name for your group\"}\r\n\t\t\t\t\t\t name={\"groupName\"}\r\n\t\t\t\t\t\t handleChange={handleChange}\r\n\t\t\t\t\t\t value={groupName}\r\n\t\t\t\t\t\t type={\"text\"}\r\n\t\t\t\t\t\t keyUp={submitGroupCreation}\r\n\t\t\t\t\t\t isDarkModeEnable={theme}\r\n\t\t\t\t\t\t isMultiline={false}/>\r\n\t\t  </Grid>\r\n\t\t  <div>\r\n\t\t    <Grid item xs={12}>\r\n\t\t\t <Button\r\n\t\t\t   className={\"button-register-form\"}\r\n\t\t\t   style={{ marginTop: \"15px\" }}\r\n\t\t\t   onClick={(event) => createGroupByName(event)}\r\n\t\t\t   fullWidth\r\n\t\t\t   variant=\"outlined\"\r\n\t\t\t   color=\"primary\"\r\n\t\t\t >\r\n\t\t\t   Create\r\n\t\t\t </Button>\r\n\t\t    </Grid>\r\n\t\t  </div>\r\n\t\t</Grid>\r\n\t   </div>\r\n\t </Container>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\alert-component.tsx",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\header-component.tsx",["223"],"import ClearAllIcon from \"@mui/icons-material/ClearAll\"\r\nimport { Button, FormControlLabel, Skeleton, Switch, Toolbar, Typography } from \"@mui/material\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { useCookies } from \"react-cookie\"\r\nimport { Link as RouterLink, useHistory } from \"react-router-dom\"\r\nimport { useAuthContext } from \"../../context/auth-context\"\r\nimport { useThemeContext } from \"../../context/theme-context\"\r\nimport { HttpService } from \"../../service/http-service\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { StoreState } from \"../../reducers/types\"\r\nimport { setAlerts } from \"../../reducers\"\r\n\r\nexport const HeaderComponent: React.FunctionComponent = () => {\r\n  const history = useHistory()\r\n  const {\r\n    user,\r\n    setUser\r\n  } = useAuthContext()\r\n  const {\r\n    authLoading,\r\n    currentActiveGroup,\r\n  } = useSelector(\r\n    (state: StoreState) => state.globalReducer\r\n  )\r\n  const {\r\n    theme,\r\n    toggleTheme\r\n  } = useThemeContext()\r\n  const dispatch = useDispatch()\r\n  const httpService = new HttpService()\r\n  const [cookie, setCookie] = useCookies()\r\n  const [isHeaderCouldRender, setHeaderRender] = useState<boolean>(false)\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    const isCurrentPathVideoComponent = location.pathname.split(\"/\")[1] !== \"call\"\r\n    if (isCurrentPathVideoComponent) {\r\n\t setHeaderRender(true)\r\n    } else {\r\n\t setHeaderRender(false)\r\n    }\r\n  }, [user])\r\n\r\n  useEffect(() => {\r\n    setCookie(\"pref-theme\", theme)\r\n  }, [theme])\r\n\r\n  function toggleThemeMode () {\r\n    toggleTheme()\r\n  }\r\n\r\n  async function logoutUser (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n    event.preventDefault()\r\n    await httpService.logout()\r\n    setUser(undefined)\r\n    dispatch(setAlerts({\r\n\t alert: {\r\n\t   text: \"You log out successfully\",\r\n\t   alert: \"success\",\r\n\t   isOpen: true\r\n\t }\r\n    }))\r\n    history.push(\"/\")\r\n  }\r\n\r\n  function generateLoading () {\r\n    return [1, 2, 3, 4].map((index) => (\r\n\t <div key={index} style={{ margin: \"0 10px 0 10px\" }}>\r\n\t   <Skeleton height={51} width={78}/>\r\n\t </div>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <>\r\n\t {\r\n\t   isHeaderCouldRender &&\r\n\t\t  <div className={theme}>\r\n\t\t\t  <Toolbar className={\"clrcstm\"}\r\n\t\t\t\t\t   style={{\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t\tborderBottom: \"0.5px solid #C8C8C8\"\r\n\t\t\t\t   }}>\r\n\t\t\t\t  <Typography variant=\"h6\">\r\n\t\t\t\t\t  <RouterLink className={\"lnk clrcstm\"} to={\"/\"}>\r\n          \t\t\t\t<span style={{\r\n\t\t\t\t\t\t  display: \"flex\",\r\n\t\t\t\t\t\t  alignItems: \"center\",\r\n\t\t\t\t\t\t  flexWrap: \"wrap\"\r\n\t\t\t\t\t\t}}><ClearAllIcon/><span style={{ letterSpacing: \"1px\" }}>FastLiteMessage</span></span>\r\n\t\t\t\t\t  </RouterLink>\r\n\t\t\t\t  </Typography>\r\n\t\t\t\t  <nav className={\"lnk clrcstm mnu\"}>\r\n\t\t\t\t{authLoading && generateLoading()}\r\n\t\t\t\t{\r\n\t\t\t\t  !authLoading && user &&\r\n\t\t\t\t\t\t<RouterLink className={\"lnk clrcstm\"} to={`/t/messages/${currentActiveGroup}`}>\r\n\t\t\t\t\t\t\t<Button className={\"clrcstm\"} variant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ margin: \"8px 12px\" }}>\r\n\t\t\t\t\t\t\t\tMessages\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</RouterLink>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t  !authLoading && !user &&\r\n\t\t\t\t\t\t<RouterLink className={\"lnk clrcstm\"} to={\"/login\"}>\r\n\t\t\t\t\t\t\t<Button className={\"clrcstm\"} variant=\"outlined\" style={{ margin: \"8px 12px\" }}>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</RouterLink>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t  !authLoading && !user &&\r\n\t\t\t\t\t\t<RouterLink className={\"lnk clrcstm\"} to={\"/register\"}>\r\n\t\t\t\t\t\t\t<Button className={\"clrcstm\"} variant=\"outlined\" style={{ margin: \"8px 12px\" }}>\r\n\t\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</RouterLink>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t  !authLoading && user &&\r\n\t\t\t\t\t\t<RouterLink className={\"lnk clrcstm\"} to={\"/create\"}>\r\n\t\t\t\t\t\t\t<Button className={\"clrcstm\"} variant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ margin: \"8px 12px\" }}>\r\n\t\t\t\t\t\t\t\tCreate group\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</RouterLink>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t  !authLoading && user &&\r\n\t\t\t\t\t\t<Button className={\"clrcstm\"} variant=\"outlined\" disabled\r\n\t\t\t\t\t\t\t\tstyle={{ margin: \"8px 12px\" }}>\r\n\t\t\t\t\t {user?.firstName}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t  !authLoading && user &&\r\n\t\t\t\t\t\t<RouterLink className={\"lnk clrcstm\"} to={\"#\"}>\r\n\t\t\t\t\t\t\t<Button className={\"clrcstm\"} variant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tonClick={(event) => logoutUser(event)}\r\n\t\t\t\t\t\t\t\t\tstyle={{ margin: \"8px 12px\" }}>\r\n\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</RouterLink>\r\n\t\t\t\t}\r\n\t\t\t\t\t  <FormControlLabel\r\n\t\t\t\t\t\t  control={\r\n\t\t\t\t\t   <Switch\r\n\t\t\t\t\t\tchecked={theme === \"light\"}\r\n\t\t\t\t\t\tonChange={() => toggleThemeMode()}\r\n\t\t\t\t\t\tname=\"checkedB\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t   />\r\n\t\t\t\t\t }\r\n\t\t\t\t\t\t  label={\r\n\t\t\t\t\t   theme === \"light\" ? \"Light \" : \"Dark\"\r\n\t\t\t\t\t }\r\n\t\t\t\t\t  />\r\n\t\t\t\t  </nav>\r\n\t\t\t  </Toolbar>\r\n\t\t  </div>\r\n\t }\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\login\\login-component.tsx",["224","225","226","227"],"import LockIcon from \"@mui/icons-material/Lock\"\r\nimport { Button, Grid, Typography } from \"@mui/material\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { useLoaderContext } from \"../../context/loader-context\"\r\nimport { useThemeContext } from \"../../context/theme-context\"\r\nimport { generateIconColorMode, generateLinkColorMode } from \"../utils/enable-dark-mode\"\r\nimport { FooterComponent } from \"../partials/footer-component\"\r\nimport { CustomTextField } from \"../partials/custom-material-textfield\"\r\nimport { HttpService } from \"../../service/http-service\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { setAlerts } from \"../../reducers\"\r\nimport { AxiosError } from \"axios\"\r\n\r\nexport const LoginComponent: React.FunctionComponent = () => {\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const { theme } = useThemeContext()\r\n  const { setLoading } = useLoaderContext()\r\n  const httpService = new HttpService()\r\n\r\n  useEffect(() => {\r\n    document.title = \"Login | FLM\"\r\n  }, [])\r\n\r\n  function handleChange (e: any) {\r\n    e.preventDefault()\r\n    switch (e.target.name) {\r\n    case \"username\":\r\n\t setUsername(e.target.value)\r\n\t break\r\n    case \"password\":\r\n\t setPassword(e.target.value)\r\n\t break\r\n    default:\r\n\t throw Error(\"Whoops ! Something went wrong...\")\r\n    }\r\n  }\r\n\r\n  function submitLogin (event: any) {\r\n    if (event.key === undefined || event.key === \"Enter\") {\r\n\t if (!username || !password) {\r\n\t   return\r\n\t }\r\n\t login()\r\n    }\r\n  }\r\n\r\n  const login = async () => {\r\n    setLoading(true)\r\n    try {\r\n\t await httpService.authenticate({\r\n\t   username,\r\n\t   password\r\n\t })\r\n\t dispatch(setAlerts({\r\n\t   alert: {\r\n\t\ttext: \"You are connected\",\r\n\t\talert: \"info\",\r\n\t\tisOpen: true\r\n\t   }\r\n\t }))\r\n\t history.push(\"/\")\r\n    } catch (err: any) {\r\n\t dispatch(setAlerts({\r\n\t   alert: {\r\n\t\ttext: err.message,\r\n\t\talert: \"error\",\r\n\t\tisOpen: true\r\n\t   }\r\n\t }))\r\n\t setUsername(\"\")\r\n\t setPassword(\"\")\r\n    } finally {\r\n\t setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={theme}\r\n\t    style={{\r\n\t\t height: \"calc(100% - 64px)\",\r\n\t\t width: \"100%\"\r\n\t    }}>\r\n\t <div className={\"main-register-form\"}>\r\n\t   <div style={{\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\"\r\n\t   }}>\r\n\t\t<LockIcon fontSize={\"large\"}\r\n\t\t\t\tclassName={generateIconColorMode(theme)}\r\n\t\t/>\r\n\t   </div>\r\n\t   <Typography component=\"h1\" variant=\"h5\">\r\n\t\tSign in\r\n\t   </Typography>\r\n\t   <div>\r\n\t\t<Grid container spacing={2}>\r\n\t\t  <Grid item xs={12}>\r\n\t\t    <CustomTextField id={\"loginUsernameInput\"}\r\n\t\t\t\t\t\t label={\"Username\"}\r\n\t\t\t\t\t\t name={\"username\"}\r\n\t\t\t\t\t\t value={username}\r\n\t\t\t\t\t\t isDarkModeEnable={theme}\r\n\t\t\t\t\t\t handleChange={handleChange}\r\n\t\t\t\t\t\t isMultiline={false}\r\n\t\t\t\t\t\t type={\"text\"}/>\r\n\t\t  </Grid>\r\n\t\t  <Grid item xs={12}>\r\n\t\t    <CustomTextField id={\"loginPasswordInput\"}\r\n\t\t\t\t\t\t label={\"Password\"}\r\n\t\t\t\t\t\t name={\"password\"}\r\n\t\t\t\t\t\t value={password}\r\n\t\t\t\t\t\t isDarkModeEnable={theme}\r\n\t\t\t\t\t\t handleChange={handleChange}\r\n\t\t\t\t\t\t type={\"password\"}\r\n\t\t\t\t\t\t isMultiline={false}\r\n\t\t\t\t\t\t keyUp={submitLogin}\r\n\t\t    />\r\n\t\t  </Grid>\r\n\t\t</Grid>\r\n\t\t<div>\r\n\t\t  <Grid item xs={12}>\r\n\t\t    <Button\r\n\t\t\t disabled={username === \"\" || password === \"\"}\r\n\t\t\t className={\"button-register-form\"}\r\n\t\t\t style={{ marginTop: \"15px\" }}\r\n\t\t\t onClick={(event) => submitLogin(event)}\r\n\t\t\t fullWidth\r\n\t\t\t variant=\"contained\"\r\n\t\t\t color=\"primary\"\r\n\t\t    >\r\n\t\t\t Sign in\r\n\t\t    </Button>\r\n\t\t  </Grid>\r\n\t\t</div>\r\n\t\t<Grid container justifyContent={\"space-between\"}>\r\n\t\t  <Link className={\"lnk\"}\r\n\t\t\t   style={{ color: generateLinkColorMode(theme) }}\r\n\t\t\t   to={\"/forgetpassword\"}>\r\n\t\t    Forgot your password ?\r\n\t\t  </Link>\r\n\t\t  <Link className={\"lnk\"}\r\n\t\t\t   style={{ color: generateLinkColorMode(theme) }}\r\n\t\t\t   to={\"/register\"}>\r\n\t\t    Sign up\r\n\t\t  </Link>\r\n\t\t</Grid>\r\n\t   </div>\r\n\t   <FooterComponent/>\r\n\t </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\websocket\\websocket-main-component.tsx",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\websocket\\video-component.tsx",["228"],"import React, { useEffect, useState } from \"react\"\r\nimport { initWebSocket } from \"../../config/websocket-config\"\r\nimport { Client, IMessage } from \"@stomp/stompjs\"\r\nimport { Box, Skeleton } from \"@mui/material\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { RtcTransportDTO } from \"../../interface-contract/rtc-transport-model\"\r\nimport { RtcActionEnum } from \"../../utils/rtc-action-enum\"\r\nimport { SoundControl } from \"../partials/video/sound-control\"\r\nimport { VideoControl } from \"../partials/video/video-control\"\r\nimport { EmptyRoom } from \"../partials/video/empty-room\"\r\nimport \"./video-component-style.css\"\r\nimport { HangUpControl } from \"../partials/video/hang-up-control\"\r\nimport { CallEnded } from \"../partials/video/call-ended\"\r\nimport { HttpService } from \"../../service/http-service\"\r\n\r\nconst getUuid = (location: string): string => {\r\n  const temp = location.split(\"/\")\r\n  return temp[temp.length - 1]\r\n}\r\n\r\nexport const VideoComponent = (): JSX.Element => {\r\n  const [ws, setWs] = useState<Client | null>()\r\n  const [currentUserId, setCurrentUserId] = useState<number>(-1)\r\n  const [isPageAuthorized, setPageStatus] = useState<boolean>(true)\r\n  const [callEnded, setCallEnded] = useState<boolean>(false)\r\n  const [currentLocalStream, setLocalStream] = useState<MediaStream | undefined>()\r\n\r\n  // const configuration = { 'iceServers': [{ 'urls': 'stun:stun.l.google.com:19302' }] }\r\n  const configuration = { \"iceServers\": [] }\r\n  const [localVideoReady, setLocalVideoState] = useState<boolean>(false)\r\n  const peerConnection = new RTCPeerConnection(configuration)\r\n  const location = useLocation()\r\n\r\n  const isUserInitiateSession = location.search.split(\"=\")[1]\r\n  const roomUrl = getUuid(location.pathname)\r\n  const groupUrlFromParent = (window as any).groupUrl\r\n  const http = new HttpService()\r\n\r\n  peerConnection.addEventListener(\"connectionstatechange\", () => {\r\n    switch (peerConnection.connectionState) {\r\n    case \"new\":\r\n\t console.log(\"Connecting...\")\r\n\t break\r\n    case \"connected\":\r\n\t console.log(\"Online\")\r\n\t break\r\n    case \"disconnected\":\r\n\t console.log(\"Disconnecting...\")\r\n\t break\r\n    case \"closed\":\r\n\t console.log(\"Offline\")\r\n\t break\r\n    case \"failed\":\r\n\t console.log(\"Error\")\r\n\t break\r\n    default:\r\n\t console.log(\"Unknown\")\r\n\t break\r\n    }\r\n  })\r\n\r\n  peerConnection.addEventListener(\"icecandidate\", (event) => {\r\n    console.log(\"EVENT\", event.candidate)\r\n    if (ws && event.candidate) {\r\n\t const iceCandidateResponse = new RtcTransportDTO(currentUserId, \"\", RtcActionEnum.ICE_CANDIDATE, undefined, undefined, event.candidate)\r\n\t ws.publish({\r\n\t   destination: `/app/rtc/${roomUrl}`,\r\n\t   body: JSON.stringify(iceCandidateResponse)\r\n\t })\r\n    }\r\n  })\r\n\r\n  peerConnection.addEventListener(\"icecandidateerror\", (event) => {\r\n    // eslint-disable-next-line no-console\r\n    console.log(\"ERROR EVENT\", event)\r\n  })\r\n\r\n  // peerConnection.addEventListener('icegatheringstatechange', (event) => {\r\n  //   console.log('icegatheringstatechange', event)\r\n  // })\r\n\r\n  peerConnection.addEventListener(\"track\", (event) => {\r\n    const remoteVideo = document.querySelector(\"video#localVideo\") as HTMLVideoElement\r\n    const [remoteStream] = event.streams\r\n    remoteVideo.srcObject = remoteStream\r\n  })\r\n\r\n  useEffect(() => {\r\n    initRTC().then((res) => {\r\n\t if (res) {\r\n\t   initWs()\r\n\t }\r\n    })\r\n  }, [groupUrlFromParent])\r\n\r\n  const initWs = async () => {\r\n    const { data } = await http.pingRoute()\r\n    const { user } = data\r\n    setCurrentUserId(user.id)\r\n    const wsObj = initWebSocket(user.wsToken)\r\n\r\n    setWs(wsObj)\r\n    wsObj.onConnect = async () => {\r\n\t wsObj.subscribe(`/topic/rtc/${user.id}`, async (res: IMessage) => {\r\n\t   const rtcTransportDto = JSON.parse(res.body) as RtcTransportDTO\r\n\t   switch (rtcTransportDto.action) {\r\n\t   case RtcActionEnum.SEND_ANSWER: {\r\n\t\tif (rtcTransportDto.answer) {\r\n\t\t  await peerConnection.setRemoteDescription(new RTCSessionDescription(rtcTransportDto.answer))\r\n\t\t}\r\n\t\tbreak\r\n\t   }\r\n\t   case RtcActionEnum.SEND_OFFER: {\r\n\t\tif (rtcTransportDto.offer) {\r\n\t\t  await peerConnection.setRemoteDescription(new RTCSessionDescription(rtcTransportDto.offer))\r\n\t\t  const answer = await peerConnection.createAnswer()\r\n\t\t  await peerConnection.setLocalDescription(answer)\r\n\t\t  const answerTransport = new RtcTransportDTO(user.id, \"\", RtcActionEnum.SEND_ANSWER, undefined, answer)\r\n\t\t  wsObj.publish({\r\n\t\t    destination: `/app/rtc/${roomUrl}`,\r\n\t\t    body: JSON.stringify(answerTransport)\r\n\t\t  })\r\n\t\t}\r\n\t\tbreak\r\n\t   }\r\n\t   case RtcActionEnum.ICE_CANDIDATE: {\r\n\t\tif (rtcTransportDto.iceCandidate) {\r\n\t\t  await peerConnection.addIceCandidate(rtcTransportDto.iceCandidate)\r\n\t\t}\r\n\t\tbreak\r\n\t   }\r\n\t   default:\r\n\t\tbreak\r\n\t   }\r\n\t })\r\n\t if (isUserInitiateSession === \"join\") {\r\n\t   const offer = await peerConnection.createOffer()\r\n\t   await peerConnection.setLocalDescription(offer)\r\n\t   const transport = new RtcTransportDTO(user.id, \"\", RtcActionEnum.JOIN_ROOM, offer)\r\n\t   wsObj.publish({\r\n\t\tdestination: `/app/rtc/${roomUrl}`,\r\n\t\tbody: JSON.stringify(transport)\r\n\t   })\r\n\t }\r\n    }\r\n    wsObj.activate()\r\n  }\r\n\r\n  const changeVideoStatus = (stopVideo: boolean) => {\r\n    if (currentLocalStream) {\r\n\t if (stopVideo) {\r\n\t   currentLocalStream.getTracks().forEach((track) => {\r\n\t\ttrack.stop()\r\n\t   })\r\n\t } else {\r\n\t   currentLocalStream.getTracks().forEach((track) => {\r\n\t\tpeerConnection.addTrack(track, currentLocalStream)\r\n\t   })\r\n\t }\r\n    }\r\n  }\r\n\r\n  const initRTC = async (): Promise<boolean> => {\r\n    const url = getUuid(location.pathname)\r\n\r\n    const urlCheckResponse = await http.ensureRoomExists(url)\r\n    setPageStatus(urlCheckResponse.data)\r\n    if (urlCheckResponse && !urlCheckResponse.data) {\r\n\t return false\r\n    }\r\n    try {\r\n\t const constraints = {\r\n\t   \"video\": true,\r\n\t   \"audio\": true\r\n\t }\r\n\t const localStream = await navigator.mediaDevices.getUserMedia(constraints)\r\n\t setLocalStream(localStream)\r\n\t const videoElement = document.querySelector(\"video#localVideo\") as HTMLVideoElement\r\n\t localStream.getTracks().forEach((track) => {\r\n\t   peerConnection.addTrack(track, localStream)\r\n\t })\r\n\t if (videoElement) {\r\n\t   setLocalVideoState(true)\r\n\t   videoElement.srcObject = localStream\r\n\t }\r\n\t return true\r\n    } catch (error) {\r\n\t // eslint-disable-next-line no-console\r\n\t console.error(\"Error accessing media devices.\", error)\r\n\t return false\r\n    }\r\n  }\r\n\r\n  const hangOnRoom = () => {\r\n    peerConnection.close()\r\n    setCallEnded(true)\r\n    if (ws) {\r\n\t const transport = new RtcTransportDTO(currentUserId, groupUrlFromParent, RtcActionEnum.LEAVE_ROOM)\r\n\t ws.publish({\r\n\t   destination: `/app/rtc/${roomUrl}`,\r\n\t   body: JSON.stringify(transport)\r\n\t })\r\n    }\r\n    if (currentLocalStream) {\r\n\t currentLocalStream.getTracks().forEach((track) => {\r\n\t   track.stop()\r\n\t })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n\t {\r\n\t   isPageAuthorized ?\r\n\t\t!callEnded &&\r\n\t\t\t<>\r\n\t\t\t\t<Box m={2} display={\"flex\"} justifyContent={\"center\"}>\r\n\t\t\t\t\t<Box m={1}>\r\n\t\t\t\t\t\t<video style={{ display: localVideoReady ? \"block\" : \"none\" }} id=\"localVideo\" width={600}\r\n\t\t\t\t\t\t\t   height={400}\r\n\t\t\t\t\t\t\t   autoPlay playsInline\r\n\t\t\t\t\t\t\t   controls={false}/>\r\n\t\t\t\t  {!localVideoReady &&\r\n\t\t\t\t\t\t  <Skeleton variant={\"rectangular\"} width={600} height={400}/>\r\n\t\t\t\t  }\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box position={\"fixed\"} width={\"100%\"} bottom={\"10px\"} display={\"flex\"} justifyContent={\"center\"}>\r\n\t\t\t\t\t<SoundControl/>\r\n\t\t\t\t\t<VideoControl changeVideoStatus={changeVideoStatus}/>\r\n\t\t\t\t\t<HangUpControl hangOnRoom={hangOnRoom}/>\r\n\t\t\t\t</Box>\r\n\t\t\t</>\r\n\t\t:\r\n\t\t<EmptyRoom/>\r\n\t }\r\n\t {\r\n\t   callEnded && <CallEnded/>\r\n\t }\r\n    </Box>\r\n  )\r\n}\r\n","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\register\\register-user.tsx",["229","230"],"import AccountCircleIcon from \"@mui/icons-material/AccountCircle\"\r\nimport CloseIcon from \"@mui/icons-material/Close\"\r\nimport { Alert, Button, Collapse, Grid, IconButton, Typography } from \"@mui/material\"\r\nimport React from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { useLoaderContext } from \"../../context/loader-context\"\r\nimport { useThemeContext } from \"../../context/theme-context\"\r\nimport { HttpService } from \"../../service/http-service\"\r\nimport \"./register-form.css\"\r\nimport { CustomTextField } from \"../partials/custom-material-textfield\"\r\nimport { generateColorMode, generateIconColorMode, generateLinkColorMode } from \"../utils/enable-dark-mode\"\r\nimport { FooterComponent } from \"../partials/footer-component\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { setAlerts } from \"../../reducers\"\r\n\r\nexport const RegisterFormComponent = (): JSX.Element => {\r\n  const { theme } = useThemeContext()\r\n  const history = useHistory()\r\n  const { setLoading } = useLoaderContext()\r\n  const [username, setUsername] = React.useState<string>(\"\")\r\n  const [lastName, setLastName] = React.useState<string>(\"\")\r\n  const [email, setEmail] = React.useState<string>(\"\")\r\n  const [password, setPassword] = React.useState<string>(\"\")\r\n  const [repeatPassword, setRepeatPassword] = React.useState<string>(\"\")\r\n  const [noMatchPasswordsError, setNoMatchPasswordsError] = React.useState<boolean>(false)\r\n  const [isEmailNotValid, setEmailNotValid] = React.useState<boolean>(false)\r\n  const [displayFormValidationError, setDisplayFormValidationError] = React.useState<boolean>(false)\r\n  const [displayEmailNotValid, setDisplayEmailNotValid] = React.useState<boolean>(false)\r\n  const [errorArray, setErrorArray] = React.useState<string[]>([])\r\n  const refWrapper = React.useRef()\r\n  const dispatch = useDispatch()\r\n  const httpService = new HttpService()\r\n\r\n  function checkFormValidation (): string[] {\r\n    const validationErrors: string[] = []\r\n    if (username === \"\") {\r\n\t validationErrors.push(\"Username is required\")\r\n    }\r\n    if (lastName === \"\") {\r\n\t validationErrors.push(\"Last name is required\")\r\n    }\r\n    if (isEmailNotValid) {\r\n\t validationErrors.push(\"Email is not valid\")\r\n    }\r\n    if (password === \"\") {\r\n\t validationErrors.push(\"Password is required\")\r\n    }\r\n    if (repeatPassword === \"\") {\r\n\t validationErrors.push(\"Please type again your password\")\r\n    }\r\n    if (noMatchPasswordsError) {\r\n\t validationErrors.push(\"Password does not match\")\r\n    }\r\n    setErrorArray(validationErrors)\r\n    return validationErrors\r\n  }\r\n\r\n  async function registerUser (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n    event.preventDefault()\r\n    setLoading(true)\r\n    errorArray.length = 0\r\n    const result = checkFormValidation()\r\n    if (result.length === 0) {\r\n\t try {\r\n\t   await httpService.createUser(username, lastName, email, password)\r\n\t   setLoading(false)\r\n\t   dispatch(setAlerts({\r\n\t\talert: {\r\n\t\t  text: \"Account created successfully\",\r\n\t\t  alert: \"success\",\r\n\t\t  isOpen: true\r\n\t\t}\r\n\t   }))\r\n\t   history.push(\"/\")\r\n\t } catch (err: any) {\r\n\t   if (err.response !== undefined) {\r\n\t\terrorArray.push(err.response.data)\r\n\t   }\r\n\t   dispatch(setAlerts({\r\n\t\talert: {\r\n\t\t  text: \"Error during registration, please see above errors\",\r\n\t\t  alert: \"error\",\r\n\t\t  isOpen: true\r\n\t\t}\r\n\t   }))\r\n\t } finally {\r\n\t   setDisplayFormValidationError(true)\r\n\t   setLoading(false)\r\n\t }\r\n    }\r\n  }\r\n\r\n  function closeAlert (event: React.MouseEvent<HTMLButtonElement, MouseEvent>, code: string) {\r\n    event.preventDefault()\r\n    switch (code) {\r\n    case \"arrayErrors\":\r\n\t setDisplayFormValidationError(false)\r\n\t break\r\n    case \"email\":\r\n\t setDisplayEmailNotValid(false)\r\n\t break\r\n    case \"repeatPassword\":\r\n\t setNoMatchPasswordsError(false)\r\n\t break\r\n    default:\r\n\t throw new Error(\"Error\")\r\n    }\r\n  }\r\n\r\n  function handleChange (e: any) {\r\n    e.preventDefault()\r\n    switch (e.target.name) {\r\n    case \"firstName\":\r\n\t setUsername(e.target.value)\r\n\t break\r\n    case \"lastName\":\r\n\t setLastName(e.target.value)\r\n\t break\r\n    case \"email\":\r\n\t setEmail(e.target.value)\r\n\t setDisplayEmailNotValid(true)\r\n\t setEmailNotValid(true)\r\n\t if (validateEmail(e.target.value)) {\r\n\t   setDisplayEmailNotValid(false)\r\n\t   setEmailNotValid(false)\r\n\t }\r\n\t break\r\n    case \"password\":\r\n\t setPassword(e.target.value)\r\n\t break\r\n    case \"repeatPassword\":\r\n\t setRepeatPassword(e.target.value)\r\n\t if (password !== e.target.value) {\r\n\t   setNoMatchPasswordsError(true)\r\n\t } else {\r\n\t   setNoMatchPasswordsError(false)\r\n\t }\r\n\t break\r\n    default:\r\n\t throw Error\r\n    }\r\n  }\r\n\r\n  function validateEmail (email: string) {\r\n    const re = /\\S+@\\S+\\.\\S+/\r\n    return re.test(String(email).toLowerCase())\r\n  }\r\n\r\n  return (\r\n    <div className={generateColorMode(theme)}\r\n\t    style={{\r\n\t\t height: \"calc(100% - 64px)\",\r\n\t\t width: \"100%\"\r\n\t    }}>\r\n\t <div className={\"main-register-form\"}>\r\n\t   <div style={{\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\"\r\n\t   }}>\r\n\t\t<AccountCircleIcon fontSize={\"large\"}\r\n\t\t\t\t\t    className={generateIconColorMode(theme)}/>\r\n\t   </div>\r\n\t   <div style={{ textAlign: \"center\" }}>\r\n\t\t<Typography component=\"h1\" variant=\"h5\">\r\n\t\t  Sign up\r\n\t\t</Typography>\r\n\t   </div>\r\n\t   <form style={{ marginTop: \"24px\" }}>\r\n\t\t<Grid container spacing={2}>\r\n\t\t  <Grid item xs={12}>\r\n\t\t    {\r\n\t\t\t <Collapse ref={refWrapper} in={displayFormValidationError}\r\n\t\t\t\t\t timeout={500}>\r\n\t\t\t   <Alert action={\r\n\t\t\t\t<IconButton\r\n\t\t\t\t  aria-label=\"close\"\r\n\t\t\t\t  color=\"inherit\"\r\n\t\t\t\t  size=\"small\"\r\n\t\t\t\t  onClick={(e) => closeAlert(e, \"arrayErrors\")}\r\n\t\t\t\t>\r\n\t\t\t\t  <CloseIcon fontSize=\"inherit\"/>\r\n\t\t\t\t</IconButton>\r\n\t\t\t   } severity=\"warning\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t  {errorArray.map((error: string, index: number) => (\r\n\t\t\t\t    <li key={index}>\r\n\t\t\t\t\t {error}\r\n\t\t\t\t    </li>\r\n\t\t\t\t  ))\r\n\t\t\t\t  }\r\n\t\t\t\t</ul>\r\n\t\t\t   </Alert>\r\n\t\t\t </Collapse>\r\n\t\t    }\r\n\t\t  </Grid>\r\n\t\t  <Grid item xs={12} sm={6}>\r\n\t\t    <CustomTextField id={\"firstNameInput\"}\r\n\t\t\t\t\t\t label={\"First Name\"}\r\n\t\t\t\t\t\t name={\"firstName\"}\r\n\t\t\t\t\t\t value={username}\r\n\t\t\t\t\t\t handleChange={handleChange}\r\n\t\t\t\t\t\t isMultiline={false}\r\n\t\t\t\t\t\t type={\"text\"} isDarkModeEnable={theme}/>\r\n\t\t  </Grid>\r\n\t\t  <Grid item xs={12} sm={6}>\r\n\t\t    <CustomTextField id={\"lastNameInput\"}\r\n\t\t\t\t\t\t label={\"Last Name\"}\r\n\t\t\t\t\t\t name={\"lastName\"}\r\n\t\t\t\t\t\t value={lastName}\r\n\t\t\t\t\t\t handleChange={handleChange}\r\n\t\t\t\t\t\t isMultiline={false}\r\n\t\t\t\t\t\t type={\"text\"} isDarkModeEnable={theme}/>\r\n\t\t  </Grid>\r\n\t\t  <Grid item xs={12}>\r\n\t\t    <CustomTextField id={\"emailInput\"}\r\n\t\t\t\t\t\t label={\"Email Address\"}\r\n\t\t\t\t\t\t name={\"email\"}\r\n\t\t\t\t\t\t value={email}\r\n\t\t\t\t\t\t handleChange={handleChange}\r\n\t\t\t\t\t\t isMultiline={false}\r\n\t\t\t\t\t\t type={\"text\"} isDarkModeEnable={theme}/>\r\n\t\t    {\r\n\t\t\t <Collapse in={displayEmailNotValid} timeout={1500}>\r\n\t\t\t   <Alert action={\r\n\t\t\t\t<IconButton\r\n\t\t\t\t  aria-label=\"close\"\r\n\t\t\t\t  color=\"inherit\"\r\n\t\t\t\t  size=\"small\"\r\n\t\t\t\t  onClick={(e) => closeAlert(e, \"email\")}\r\n\t\t\t\t>\r\n\t\t\t\t  <CloseIcon fontSize=\"inherit\"/>\r\n\t\t\t\t</IconButton>\r\n\t\t\t   } severity=\"warning\">Email is not valid</Alert>\r\n\t\t\t </Collapse>\r\n\t\t    }\r\n\t\t  </Grid>\r\n\t\t  <Grid item xs={12}>\r\n\t\t    <CustomTextField id={\"passwordInput\"}\r\n\t\t\t\t\t\t label={\"Password\"}\r\n\t\t\t\t\t\t name={\"password\"}\r\n\t\t\t\t\t\t handleChange={handleChange}\r\n\t\t\t\t\t\t value={password}\r\n\t\t\t\t\t\t isMultiline={false}\r\n\t\t\t\t\t\t type={\"password\"}\r\n\t\t\t\t\t\t isDarkModeEnable={theme}/>\r\n\t\t  </Grid>\r\n\t\t  <Grid item xs={12}>\r\n\t\t    <CustomTextField id={\"repeatPasswordInput\"}\r\n\t\t\t\t\t\t label={\"Repeat password\"}\r\n\t\t\t\t\t\t name={\"repeatPassword\"}\r\n\t\t\t\t\t\t handleChange={handleChange}\r\n\t\t\t\t\t\t value={repeatPassword}\r\n\t\t\t\t\t\t isMultiline={false}\r\n\t\t\t\t\t\t type={\"password\"}\r\n\t\t\t\t\t\t isDarkModeEnable={theme}/>\r\n\t\t    {\r\n\t\t\t <Collapse in={noMatchPasswordsError} timeout={1500}>\r\n\t\t\t   <Alert action={\r\n\t\t\t\t<IconButton\r\n\t\t\t\t  aria-label=\"close\"\r\n\t\t\t\t  color=\"inherit\"\r\n\t\t\t\t  size=\"small\"\r\n\t\t\t\t  onClick={(e) => closeAlert(e, \"repeatPassword\")}\r\n\t\t\t\t>\r\n\t\t\t\t  <CloseIcon fontSize=\"inherit\"/>\r\n\t\t\t\t</IconButton>\r\n\t\t\t   } severity=\"error\">Passwords does not match</Alert>\r\n\t\t\t </Collapse>\r\n\t\t    }\r\n\t\t  </Grid>\r\n\t\t</Grid>\r\n\t\t<div style={{ marginTop: \"10px\" }}>\r\n\t\t  <Button\r\n\t\t    disabled={username === \"\" || password === \"\" || lastName === \"\" || repeatPassword === \"\" || email === \"\"}\r\n\t\t    className={\"button-register-form clrcstm\"}\r\n\t\t    type=\"submit\"\r\n\t\t    fullWidth\r\n\t\t    variant=\"contained\"\r\n\t\t    color=\"primary\"\r\n\t\t    onClick={(e) => registerUser(e)}\r\n\t\t  >\r\n\t\t    Sign Up\r\n\t\t  </Button>\r\n\t\t</div>\r\n\t\t<Grid container justifyContent=\"flex-end\">\r\n\t\t  <Grid item>\r\n\t\t    <Link className={\"lnk\"}\r\n\t\t\t\tstyle={{ color: generateLinkColorMode(theme) }}\r\n\t\t\t\tto={\"/login\"}>\r\n\t\t\t Already have an account? Sign in\r\n\t\t    </Link>\r\n\t\t  </Grid>\r\n\t\t</Grid>\r\n\t   </form>\r\n\t </div>\r\n\t <FooterComponent/>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\reducers\\initial-store-state.ts",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\middleware\\ws-middleware.ts",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\utils\\uuid-generator.ts",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\utils\\type-message-enum.ts",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\utils\\rtc-action-enum.ts",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\utils\\enable-dark-mode.ts",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\config\\websocket-config.ts",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\interface-contract\\rtc-transport-model.ts",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\footer-component.tsx",["231"],"import { Box, Typography } from \"@mui/material\"\r\nimport React from \"react\"\r\nimport { useThemeContext } from \"../../context/theme-context\"\r\nimport { generateColorMode } from \"../utils/enable-dark-mode\"\r\n\r\nexport const FooterComponent = () => {\r\n\tconst { theme } = useThemeContext()\r\n\r\n\treturn (\r\n\t\t<Box mt={5}>\r\n\t\t\t<Typography variant=\"body2\" color=\"inherit\" align=\"center\">\r\n\t\t\t\t<a className={\"clrcstm lnk\" + generateColorMode(theme)} target={\"_blank\"}\r\n\t\t\t\t\thref={\"https://github.com/Thibaut-Mouton/react-spring-messenger-project\"} rel=\"noreferrer\">\r\n          FastLiteMessage - Open source software\r\n\t\t\t\t</a>\r\n\t\t\t\t{\" - \"}\r\n\t\t\t\t{new Date().getFullYear()}\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t)\r\n}\r\n","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\websocket\\websocket-group-actions-component.tsx",["232","233","234","235","236"],"import {\r\n  Collapse,\r\n  IconButton,\r\n  List,\r\n  ListItem, ListItemButton,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  MenuItem,\r\n  Tooltip\r\n} from \"@mui/material\"\r\nimport { ExpandLess } from \"@mui/icons-material\"\r\nimport SecurityIcon from \"@mui/icons-material/Security\"\r\nimport ExpandMore from \"@mui/icons-material/ExpandMore\"\r\nimport PersonIcon from \"@mui/icons-material/Person\"\r\nimport GroupAddIcon from \"@mui/icons-material/GroupAdd\"\r\nimport GroupIcon from \"@mui/icons-material/Group\"\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { GroupActionEnum } from \"./group-action-enum\"\r\nimport { useAuthContext } from \"../../context/auth-context\"\r\nimport { useThemeContext } from \"../../context/theme-context\"\r\nimport {\r\n  generateClassName,\r\n  generateIconColorMode\r\n} from \"../utils/enable-dark-mode\"\r\nimport { StoreState } from \"../../reducers/types\"\r\nimport { useWebSocketContext } from \"../../context/ws-context\"\r\nimport { TransportModel } from \"../../interface-contract/transport-model\"\r\nimport { TransportActionEnum } from \"../../utils/transport-action-enum\"\r\nimport { AllUsersDialog } from \"../partials/all-users-dialog\"\r\nimport { HttpService } from \"../../service/http-service\"\r\nimport { GroupUserModel } from \"../../interface-contract/group-user-model\"\r\nimport { setAlerts } from \"../../reducers\"\r\n\r\nexport const WebSocketGroupActionComponent: React.FunctionComponent<{ groupUrl: string }> = ({ groupUrl }) => {\r\n  const [paramsOpen, setParamsOpen] = useState(false)\r\n  const [popupOpen, setPopupOpen] = useState(false)\r\n  const [usersInConversation, setUsersInConversation] = useState<GroupUserModel[]>([])\r\n  const [allUsers, setAllUsers] = useState<GroupUserModel[]>([])\r\n  const [isCurrentUserAdmin, setCurrentUserIsAdmin] = useState(false)\r\n  const [toolTipAction, setToolTipAction] = useState(false)\r\n  const [openTooltipId, setToolTipId] = useState<number | null>(null)\r\n  const { theme } = useThemeContext()\r\n  const dispatch = useDispatch()\r\n  const { ws } = useWebSocketContext()\r\n  const httpService = new HttpService()\r\n  const { user } = useAuthContext()\r\n\r\n  const {\r\n    currentActiveGroup,\r\n    groups\r\n  } = useSelector((state: StoreState) => state.globalReducer)\r\n\r\n  useEffect(() => {\r\n    clearData()\r\n    return () => {\r\n\t clearData()\r\n    }\r\n  }, [currentActiveGroup])\r\n\r\n  function handleTooltipAction (event: any, action: string) {\r\n    event.preventDefault()\r\n    if (action === GroupActionEnum.OPEN) {\r\n\t setToolTipAction(true)\r\n    }\r\n    if (action === GroupActionEnum.CLOSE) {\r\n\t setToolTipAction(false)\r\n\t setToolTipId(null)\r\n    }\r\n  }\r\n\r\n  function clearData () {\r\n    setAllUsers([])\r\n    setToolTipAction(false)\r\n    setToolTipId(null)\r\n    setCurrentUserIsAdmin(false)\r\n    setUsersInConversation([])\r\n    handlePopupState(false)\r\n    setParamsOpen(false)\r\n  }\r\n\r\n  function handleDisplayUserAction (event: any, id: number) {\r\n    event.preventDefault()\r\n    setToolTipId(id)\r\n  }\r\n\r\n  function closeDisplayUserAction (event: any) {\r\n    event.preventDefault()\r\n    setToolTipAction(false)\r\n    setToolTipId(null)\r\n  }\r\n\r\n  async function handleClick (event: React.MouseEvent<HTMLElement>, action: string) {\r\n    event.preventDefault()\r\n    switch (action) {\r\n    case GroupActionEnum.PARAM:\r\n\t if (usersInConversation.length === 0) {\r\n\t   const res = await httpService.fetchAllUsersInConversation(groupUrl)\r\n\t   res.data.forEach((groupUserModel) => {\r\n\t\tif (groupUserModel.userId === user?.id && groupUserModel.admin) {\r\n\t\t  setCurrentUserIsAdmin(true)\r\n\t\t}\r\n\t   })\r\n\t   setUsersInConversation(res.data)\r\n\t }\r\n\t setParamsOpen(!paramsOpen)\r\n\t break\r\n    default:\r\n\t throw new Error(\"Error, please refresh page\")\r\n    }\r\n  }\r\n\r\n  function handlePopupState (isOpen: boolean) {\r\n    setPopupOpen(isOpen)\r\n  }\r\n\r\n  async function handleAddUserAction (action: string) {\r\n    switch (action) {\r\n    case GroupActionEnum.OPEN:\r\n\t handlePopupState(true)\r\n\t if (allUsers.length === 0) {\r\n\t   const res = await httpService.fetchAllUsersWithoutAlreadyInGroup(groupUrl)\r\n\t   setAllUsers(res.data)\r\n\t }\r\n\t break\r\n    case GroupActionEnum.CLOSE:\r\n\t handlePopupState(false)\r\n\t break\r\n    default:\r\n\t throw new Error(\"Cannot handle AddUserAction\")\r\n    }\r\n  }\r\n\r\n  function leaveGroup (userId: number) {\r\n    if (ws) {\r\n\t const transport = new TransportModel(userId, TransportActionEnum.LEAVE_GROUP, undefined, groupUrl)\r\n\t ws.publish({\r\n\t   destination: \"/app/message\",\r\n\t   body: JSON.stringify(transport)\r\n\t })\r\n    }\r\n  }\r\n\r\n  async function removeUserFromAdminListInConversation (userId: string | number) {\r\n    try {\r\n\t const res = await httpService.removeAdminUserInConversation(userId, groupUrl)\r\n\t const users = [...usersInConversation]\r\n\t const user = users.find((elt) => elt.userId === userId)\r\n\t if (user) {\r\n\t   user.admin = false\r\n\t }\r\n\t setUsersInConversation(users)\r\n\t dispatch(setAlerts({\r\n\t   alert: {\r\n\t\ttext: res.data,\r\n\t\talert: \"success\",\r\n\t\tisOpen: true\r\n\t   }\r\n\t }))\r\n    } catch (err) {\r\n\t dispatch(setAlerts({\r\n\t   alert: {\r\n\t\ttext: \"Cannot remove user rights. Please retry later\",\r\n\t\talert: \"error\",\r\n\t\tisOpen: true\r\n\t   }\r\n\t }))\r\n    }\r\n  }\r\n\r\n  async function grantUserAdminInConversation (userId: number | string) {\r\n    try {\r\n\t const res = await httpService.grantUserAdminInConversation(userId, groupUrl)\r\n\t dispatch(setAlerts({\r\n\t   alert: {\r\n\t\ttext: res.data,\r\n\t\talert: \"success\",\r\n\t\tisOpen: true\r\n\t   }\r\n\t }))\r\n\t const users = [...usersInConversation]\r\n\t const user = users.find((elt) => elt.userId === userId)\r\n\t if (user) {\r\n\t   user.admin = true\r\n\t }\r\n\t setUsersInConversation(users)\r\n    } catch (err) {\r\n\t dispatch(setAlerts({\r\n\t   alert: {\r\n\t\ttext: \"Cannot grant user. Please retry later\",\r\n\t\talert: \"error\",\r\n\t\tisOpen: true\r\n\t   }\r\n\t }))\r\n    }\r\n  }\r\n\r\n  async function addUserInConversation (userId: string | number) {\r\n    try {\r\n\t const res = await httpService.addUserToGroup(userId, groupUrl)\r\n\t const users = [...usersInConversation]\r\n\t users.push(res.data)\r\n\t setUsersInConversation(users)\r\n\t dispatch(setAlerts({\r\n\t   alert: {\r\n\t\ttext: `${res.data.firstName} has been added to group`,\r\n\t\talert: \"success\",\r\n\t\tisOpen: true\r\n\t   }\r\n\t }))\r\n    } catch (err: any) {\r\n\t dispatch(setAlerts({\r\n\t   alert: {\r\n\t\ttext: `Cannot add user to group : ${err.toString()}`,\r\n\t\talert: \"error\",\r\n\t\tisOpen: true\r\n\t   }\r\n\t }))\r\n    } finally {\r\n\t setPopupOpen(false)\r\n    }\r\n  }\r\n\r\n  async function removeUserFromConversation (userId: string | number) {\r\n    try {\r\n\t const res = await httpService.removeUserFromConversation(userId, groupUrl)\r\n\t dispatch(setAlerts({\r\n\t   alert: {\r\n\t\ttext: res.data,\r\n\t\talert: \"success\",\r\n\t\tisOpen: true\r\n\t   }\r\n\t }))\r\n\t const users = [...usersInConversation]\r\n\t const index = users.findIndex((elt) => elt.userId === userId)\r\n\t users.splice(index, 1)\r\n\t setUsersInConversation(users)\r\n    } catch (err: any) {\r\n\t dispatch(setAlerts({\r\n\t   alert: {\r\n\t\ttext: `Cannot remove user from group : ${err.toString()}`,\r\n\t\talert: \"error\",\r\n\t\tisOpen: true\r\n\t   }\r\n\t }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\t <div className={\"sidebar\"}>\r\n\t   <List\r\n\t\tcomponent=\"nav\">\r\n\t\t<ListItemButton disabled={groups.length === 0}\r\n\t\t\t\t\t onClick={() => handleAddUserAction(GroupActionEnum.OPEN)}>\r\n\t\t  <ListItemIcon>\r\n\t\t    <GroupAddIcon style={{ color: generateIconColorMode(theme) }}/>\r\n\t\t  </ListItemIcon>\r\n\t\t  <ListItemText primary=\"Add user to group\"/>\r\n\t\t</ListItemButton>\r\n\t\t<ListItemButton disabled={groups.length === 0}\r\n\t\t\t\t\t onClick={(event) => handleClick(event, GroupActionEnum.PARAM)}>\r\n\t\t  <ListItemIcon>\r\n\t\t    <GroupIcon style={{ color: generateIconColorMode(theme) }}/>\r\n\t\t  </ListItemIcon>\r\n\t\t  <ListItemText primary=\"Members\"/>\r\n\t\t  {paramsOpen ? <ExpandLess/> : <ExpandMore/>}\r\n\t\t</ListItemButton>\r\n\t\t<Collapse in={paramsOpen}>\r\n\t\t  <List component=\"div\" disablePadding>\r\n\t\t    {paramsOpen && usersInConversation.map((value, index) => (\r\n\t\t\t <ListItem key={index}\r\n\t\t\t\t\t onMouseEnter={(event) => handleDisplayUserAction(event, index)}\r\n\t\t\t\t\t onMouseLeave={event => closeDisplayUserAction(event)}>\r\n\t\t\t   <ListItemIcon>\r\n\t\t\t\t{\r\n\t\t\t\t  value.admin\r\n\t\t\t\t    ? <SecurityIcon\r\n\t\t\t\t\t style={{ color: generateIconColorMode(theme) }}/>\r\n\t\t\t\t    : <PersonIcon\r\n\t\t\t\t\t style={{ color: generateIconColorMode(theme) }}/>\r\n\t\t\t\t}\r\n\t\t\t   </ListItemIcon>\r\n\t\t\t   <ListItemText primary={value.firstName + \" \" + value.lastName}\r\n\t\t\t\t\t\t  secondary={\r\n\t\t\t\t\t\t    <React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className={generateClassName(theme)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  value.admin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t    ? \"Administrator\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t    : \"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t    </React.Fragment>\r\n\t\t\t\t\t\t  }/>\r\n\t\t\t   <ListItemSecondaryAction\r\n\t\t\t\tonMouseEnter={event => handleDisplayUserAction(event, index)}\r\n\t\t\t\tonMouseLeave={event => closeDisplayUserAction(event)}\r\n\t\t\t   >\r\n\t\t\t\t{openTooltipId === index\r\n\t\t\t\t  ? <Tooltip\r\n\t\t\t\t    PopperProps={{\r\n\t\t\t\t\t disablePortal: false\r\n\t\t\t\t    }}\r\n\t\t\t\t    onClose={event => handleTooltipAction(event, GroupActionEnum.CLOSE)}\r\n\t\t\t\t    open={toolTipAction}\r\n\t\t\t\t    disableFocusListener\r\n\t\t\t\t    disableHoverListener\r\n\t\t\t\t    disableTouchListener\r\n\t\t\t\t    title={\r\n\t\t\t\t\t <React.Fragment>\r\n\t\t\t\t\t   <div>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t  isCurrentUserAdmin && value.admin &&\r\n\t\t\t\t\t\t\t\t  <MenuItem\r\n\t\t\t\t\t\t\t\t\t  onClick={() => removeUserFromAdminListInConversation(value.userId)}\r\n\t\t\t\t\t\t\t\t\t  dense={true}>Remove from administrator\r\n\t\t\t\t\t\t\t\t  </MenuItem>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t  isCurrentUserAdmin && !value.admin &&\r\n\t\t\t\t\t\t\t\t  <MenuItem\r\n\t\t\t\t\t\t\t\t\t  onClick={() => grantUserAdminInConversation(value.userId)}\r\n\t\t\t\t\t\t\t\t\t  dense={true}>Grant\r\n\t\t\t\t\t\t\t\t\t  administrator</MenuItem>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t  !(user?.id === value.userId) &&\r\n\t\t\t\t\t\t\t\t  <MenuItem\r\n\t\t\t\t\t\t\t\t\t  onClick={() => removeUserFromConversation(value.userId)}\r\n\t\t\t\t\t\t\t\t\t  dense={true}>Remove from group</MenuItem>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t  user?.id === value.userId &&\r\n\t\t\t\t\t\t\t\t  <MenuItem\r\n\t\t\t\t\t\t\t\t\t  onClick={() => leaveGroup(Number(value.userId))}\r\n\t\t\t\t\t\t\t\t\t  dense={true}>Leave group</MenuItem>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t   </div>\r\n\t\t\t\t\t </React.Fragment>\r\n\t\t\t\t    }>\r\n\t\t\t\t    <IconButton\r\n\t\t\t\t\t onClick={event => handleTooltipAction(event, GroupActionEnum.OPEN)}\r\n\t\t\t\t\t style={{ color: generateIconColorMode(theme) }}>\r\n\t\t\t\t\t <MoreHorizIcon/>\r\n\t\t\t\t    </IconButton>\r\n\t\t\t\t  </Tooltip>\r\n\t\t\t\t  : <IconButton/>\r\n\t\t\t\t}\r\n\t\t\t   </ListItemSecondaryAction>\r\n\t\t\t </ListItem>\r\n\t\t    ))}\r\n\t\t  </List>\r\n\t\t</Collapse>\r\n\t   </List>\r\n\t </div>\r\n\t <AllUsersDialog usersList={allUsers} open={popupOpen} setOpen={handlePopupState}\r\n\t\t\t\t  dialogTitle={\"Add user to conversation\"} action={addUserInConversation}/>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\custom-material-textfield.tsx",["237","238","239","240","241"],"import { TextField } from \"@mui/material\"\r\nimport React, { FunctionComponent } from \"react\"\r\nimport styled from \"@emotion/styled\"\r\nimport { useThemeContext } from \"../../context/theme-context\"\r\n\r\nconst StyledComp = styled(TextField, {\r\n  shouldForwardProp: (prop) => prop !== \"color\" && prop !== \"myProp\",\r\n})<{ myProp: string }>(({\r\n  myProp,\r\n}) => ({\r\n  \"& label.Mui-focused\": {\r\n    color: myProp === \"dark\" ? \"white\" : \"black\",\r\n  },\r\n  \"& .MuiInputLabel-formControl\": {\r\n    color: myProp === \"dark\" ? \"white\" : \"black\",\r\n  },\r\n  \"& .MuiInput-underline\": {\r\n    color: myProp === \"dark\" ? \"white\" : \"black\",\r\n  },\r\n  \"& .MuiOutlinedInput-input\": {\r\n    color: myProp === \"dark\" ? \"white\" : \"black\",\r\n  },\r\n  \"& .MuiOutlinedInput-root\": {\r\n    \"& fieldset\": {\r\n\t borderColor: myProp === \"dark\" ? \"white\" : \"black\",\r\n    },\r\n    \"&:hover fieldset\": {\r\n\t borderColor: myProp === \"dark\" ? \"white\" : \"black\",\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n\t borderColor: myProp === \"dark\" ? \"white\" : \"black\",\r\n    },\r\n  },\r\n}))\r\n\r\ninterface ICustomMaterialTextField {\r\n  id: string | undefined\r\n  label: string\r\n  value: string\r\n  name: string\r\n  isMultiline: boolean\r\n  type: \"password\" | \"text\"\r\n  handleChange: (event: any) => void\r\n  isDarkModeEnable: string\r\n  onClick?: () => void\r\n  keyUp?: (event: any) => void\r\n  keyDown?: (event: any) => void\r\n}\r\n\r\nexport const CustomTextField: FunctionComponent<ICustomMaterialTextField> = (props) => {\r\n  const { theme } = useThemeContext()\r\n\r\n  const handleChange = (event: any) => {\r\n    props.handleChange(event)\r\n  }\r\n\r\n  const submitForm = (event: any) => {\r\n    if (props.keyUp !== undefined) {\r\n\t props.keyUp(event)\r\n    }\r\n    if (props.keyDown !== undefined) {\r\n\t props.keyDown(event)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n\t <StyledComp\r\n\t   myProp={theme}\r\n\t   id={props.id}\r\n\t   label={props.label}\r\n\t   variant=\"outlined\"\r\n\t   fullWidth\r\n\t   value={props.value}\r\n\t   autoFocus={false}\r\n\t   maxRows={4}\r\n\t   multiline={props.isMultiline}\r\n\t   name={props.name}\r\n\t   onClick={props.onClick}\r\n\t   onChange={handleChange}\r\n\t   type={props.type}\r\n\t   onKeyUp={(event) => submitForm(event)}\r\n\t   onKeyDown={(event) => submitForm(event)}\r\n\t />\r\n    </React.Fragment>\r\n  )\r\n}\r\n","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\websocket\\websocket-groups-component.tsx",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\websocket\\websocket-chat-component.tsx",["242","243","244","245","246","247"],"import SendIcon from \"@mui/icons-material/Send\"\r\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\"\r\nimport ImageIcon from \"@mui/icons-material/Image\"\r\nimport { Box, Button, CircularProgress, IconButton, Tooltip } from \"@mui/material\"\r\nimport React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { GroupActionEnum } from \"./group-action-enum\"\r\nimport { useAuthContext } from \"../../context/auth-context\"\r\nimport { useLoaderContext } from \"../../context/loader-context\"\r\nimport { useThemeContext } from \"../../context/theme-context\"\r\nimport { useWebSocketContext } from \"../../context/ws-context\"\r\nimport { FullMessageModel } from \"../../interface-contract/full-message-model\"\r\nimport { getPayloadSize } from \"../../utils/string-size-calculator\"\r\nimport { TransportActionEnum } from \"../../utils/transport-action-enum\"\r\nimport { TypeMessageEnum } from \"../../utils/type-message-enum\"\r\nimport { markMessageAsSeen } from \"../../reducers\"\r\nimport { StoreState } from \"../../reducers/types\"\r\nimport { NoDataComponent } from \"../partials/no-data-component\"\r\nimport { TransportModel } from \"../../interface-contract/transport-model\"\r\nimport { CallWindowComponent } from \"./call-window-component\"\r\nimport { ImagePreviewComponent } from \"../partials/image-preview\"\r\nimport { CustomTextField } from \"../partials/custom-material-textfield\"\r\nimport { ActiveVideoCall } from \"../partials/video/active-video-call\"\r\nimport { HttpService } from \"../../service/http-service\"\r\nimport { generateIconColorMode } from \"../utils/enable-dark-mode\"\r\n\r\nexport const WebSocketChatComponent: React.FunctionComponent<{ groupUrl: string }> = ({ groupUrl }) => {\r\n  const { theme } = useThemeContext()\r\n  const { user } = useAuthContext()\r\n  const { ws } = useWebSocketContext()\r\n  const { setLoading } = useLoaderContext()\r\n  const [isPreviewImageOpen, setPreviewImageOpen] = React.useState(false)\r\n  const dispatch = useDispatch()\r\n  const [messageId, setLastMessageId] = React.useState(0)\r\n  const [loadingOldMessages, setLoadingOldMessages] = React.useState<boolean>(false)\r\n\r\n  const [imgSrc, setImgSrc] = React.useState(\"\")\r\n  const [file, setFile] = React.useState<File | null>(null)\r\n  const [imagePreviewUrl, setImagePreviewUrl] = React.useState<string>(\"\")\r\n  const [imageLoaded, setImageLoaded] = React.useState(false)\r\n  const [message, setMessage] = React.useState(\"\")\r\n  const httpService = new HttpService()\r\n  let messageEnd: HTMLDivElement | null\r\n\r\n  const {\r\n    isWsConnected,\r\n    chatHistory,\r\n    allMessagesFetched,\r\n    currentActiveGroup,\r\n    currentGroup,\r\n    userId\r\n  } = useSelector(\r\n    (state: StoreState) => state.globalReducer\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (isWsConnected && groupUrl && ws) {\r\n\t const transport = new TransportModel(userId || 0, TransportActionEnum.FETCH_GROUP_MESSAGES, undefined, groupUrl, undefined, -1)\r\n\t ws.publish({\r\n\t   destination: \"/app/message\",\r\n\t   body: JSON.stringify(transport)\r\n\t })\r\n\t setLoading(false)\r\n    }\r\n  }, [isWsConnected])\r\n\r\n  useEffect(() => {\r\n    if (groupUrl && ws && ws.connected) {\r\n\t const transport = new TransportModel(userId || 0, TransportActionEnum.FETCH_GROUP_MESSAGES, undefined, groupUrl, undefined, -1)\r\n\t ws.publish({\r\n\t   destination: \"/app/message\",\r\n\t   body: JSON.stringify(transport)\r\n\t })\r\n    }\r\n  }, [groupUrl, ws])\r\n\r\n  useEffect(() => {\r\n    if (!loadingOldMessages) {\r\n\t scrollToEnd()\r\n    }\r\n    setLoadingOldMessages(false)\r\n    if (chatHistory && chatHistory.length > 0) {\r\n\t setLastMessageId(chatHistory[0].id)\r\n    }\r\n  }, [chatHistory])\r\n\r\n  function styleSelectedMessage () {\r\n    return theme === \"dark\" ? \"hover-msg-dark\" : \"hover-msg-light\"\r\n  }\r\n\r\n  function generateImageRender (message: FullMessageModel) {\r\n    if (message.fileUrl === undefined) {\r\n\t return null\r\n    }\r\n    return (\r\n\t <div>\r\n\t   <img src={message.fileUrl} height={\"200px\"} alt={message.name}\r\n\t\t   onClick={() => handleImagePreview(GroupActionEnum.OPEN, message.fileUrl)}\r\n\t\t   style={{\r\n\t\t\tborder: \"1px solid #c8c8c8\",\r\n\t\t\tborderRadius: \"7%\"\r\n\t\t   }}/>\r\n\t </div>\r\n    )\r\n  }\r\n\r\n  function resetImageBuffer (event: any) {\r\n    event.preventDefault()\r\n    setFile(null)\r\n    setImagePreviewUrl(\"\")\r\n    setImageLoaded(false)\r\n  }\r\n\r\n  function previewFile (event: any) {\r\n    resetImageBuffer(event)\r\n    const reader = new FileReader()\r\n    const file = event.target.files[0]\r\n    reader.readAsDataURL(file)\r\n\r\n    reader.onload = (e) => {\r\n\t if (e.target && e.target.readyState === FileReader.DONE) {\r\n\t   setFile(file)\r\n\t   setImagePreviewUrl(reader.result as string)\r\n\t   setImageLoaded(true)\r\n\t }\r\n    }\r\n  }\r\n\r\n  function submitMessage (event: any) {\r\n    if (message !== \"\") {\r\n\t if (event.key !== undefined && event.shiftKey && event.keyCode === 13) {\r\n\t   return\r\n\t }\r\n\t if (event.key !== undefined && event.keyCode === 13) {\r\n\t   event.preventDefault()\r\n\t   setMessage(\"\")\r\n\t   sendMessage()\r\n\t }\r\n    }\r\n  }\r\n\r\n  function handleChange (event: any) {\r\n    setMessage(event.target.value)\r\n  }\r\n\r\n  async function sendMessage () {\r\n    if (message !== \"\") {\r\n\t if (getPayloadSize(message) < 8192 && ws && ws.active) {\r\n\t   const transport = new TransportModel(userId || 0, TransportActionEnum.SEND_GROUP_MESSAGE, undefined, currentActiveGroup, message)\r\n\t   ws.publish({\r\n\t\tdestination: \"/app/message\",\r\n\t\tbody: JSON.stringify(transport)\r\n\t   })\r\n\t }\r\n\t setMessage(\"\")\r\n    }\r\n    if (file !== null) {\r\n\t const userId = String(user?.id)\r\n\t const formData = new FormData()\r\n\t formData.append(\"file\", file)\r\n\t formData.append(\"userId\", userId)\r\n\t formData.append(\"groupUrl\", groupUrl || \"\")\r\n\t await httpService.uploadFile(formData)\r\n\t setMessage(\"\")\r\n\t setImageLoaded(false)\r\n\t setFile(null)\r\n\t setImagePreviewUrl(\"\")\r\n    }\r\n  }\r\n\r\n  function scrollToEnd () {\r\n    messageEnd?.scrollIntoView({ behavior: \"auto\" })\r\n  }\r\n\r\n  function handlePopupState (isOpen: boolean) {\r\n    setPreviewImageOpen(isOpen)\r\n  }\r\n\r\n  function handleImagePreview (action: string, src: string) {\r\n    switch (action) {\r\n    case GroupActionEnum.OPEN:\r\n\t setImgSrc(src)\r\n\t handlePopupState(true)\r\n\t break\r\n    case GroupActionEnum.CLOSE:\r\n\t handlePopupState(false)\r\n\t break\r\n    default:\r\n\t throw new Error(\"handleImagePreview failed\")\r\n    }\r\n  }\r\n\r\n  function markMessageSeen () {\r\n    dispatch(markMessageAsSeen({\r\n\t groupUrl\r\n    }))\r\n  }\r\n\r\n  function handleScroll (event: any) {\r\n    if (event.target.scrollTop === 0) {\r\n\t if (!allMessagesFetched && ws) {\r\n\t   setLoadingOldMessages(true)\r\n\t   const transport = new TransportModel(userId || 0, TransportActionEnum.FETCH_GROUP_MESSAGES, undefined, groupUrl, undefined, messageId)\r\n\t   ws.publish({\r\n\t\tdestination: \"/app/message\",\r\n\t\tbody: JSON.stringify(transport)\r\n\t   })\r\n\t }\r\n    } else {\r\n\t setLoadingOldMessages(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n\t {\r\n\t   groupUrl === \"\" ?\r\n\t\t<div style={{\r\n\t\t  display: \"flex\",\r\n\t\t  flex: \"1\",\r\n\t\t  flexDirection: \"column\",\r\n\t\t  maxWidth: \"45%\"\r\n\t\t}}>\r\n\t\t  <NoDataComponent/>\r\n\t\t</div>\r\n\t\t: currentGroup.group &&\r\n\t\t\t<div style={{\r\n\t\t    display: \"flex\",\r\n\t\t    flex: \"1\",\r\n\t\t    flexDirection: \"column\",\r\n\t\t    maxWidth: \"45%\"\r\n\t\t  }}>\r\n\t\t\t\t<div style={{\r\n\t\t\t   width: \"100%\",\r\n\t\t\t   height: \"50px\",\r\n\t\t\t   borderBottom: \"1px solid gray\"\r\n\t\t\t }}>\r\n\t\t\t\t\t<Box m={1} display={\"flex\"} justifyContent={\"space-between\"}>\r\n\t\t\t\t\t\t\t\t<span style={{\r\n\t\t\t\t\t\t\t\t  fontSize: \"20px\",\r\n\t\t\t\t\t\t\t\t  fontWeight: \"bold\"\r\n\t\t\t\t\t\t\t\t}}>{currentGroup.group.name}</span>\r\n\t\t\t\t\t\t<ActiveVideoCall isAnyCallActive={currentGroup.groupCall.anyCallActive}/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tonScroll={(event) => handleScroll(event)}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t  backgroundColor: \"transparent\",\r\n\t\t\t\t  width: \"100%\",\r\n\t\t\t\t  height: \"calc(100% - 56px)\",\r\n\t\t\t\t  overflowY: \"scroll\"\r\n\t\t\t\t}}>\r\n\t\t\t   {\r\n\t\t\t\t!allMessagesFetched && loadingOldMessages &&\r\n\t\t\t\t\t  <div style={{\r\n\t\t\t\t    width: \"inherit\",\r\n\t\t\t\t    boxSizing: \"border-box\",\r\n\t\t\t\t    height: \"40px\",\r\n\t\t\t\t    position: \"relative\",\r\n\t\t\t\t    display: \"flex\",\r\n\t\t\t\t    justifyContent: \"center\"\r\n\t\t\t\t  }}>\r\n\t\t\t\t\t\t  <div style={{\r\n\t\t\t\t\t   display: \"flex\",\r\n\t\t\t\t\t   flexDirection: \"column\"\r\n\t\t\t\t\t }}>\r\n\t\t\t\t\t\t\t  <div style={{\r\n\t\t\t\t\t\t  display: \"flex\",\r\n\t\t\t\t\t\t  justifyContent: \"center\"\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t  <CircularProgress style={{ margin: \"5px\" }} size={40}/>\r\n\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t  <span style={{ fontSize: \"16px\" }}>Loading older messages ....</span>\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t   }\r\n\t\t\t\t\t<ImagePreviewComponent imgSrc={imgSrc}\r\n\t\t\t\t\t\t\t\t\t\t   displayImagePreview={isPreviewImageOpen}\r\n\t\t\t\t\t\t\t\t\t\t   setDisplayImagePreview={handlePopupState}/>\r\n\t\t\t   {chatHistory && chatHistory.map((messageModel, index, array) => (\r\n\t\t\t\t<Tooltip\r\n\t\t\t\t  key={index}\r\n\t\t\t\t  enterDelay={1000}\r\n\t\t\t\t  leaveDelay={0}\r\n\t\t\t\t  title={new Date(messageModel.time).getHours() + \":\" + new Date(messageModel.time).getMinutes()}\r\n\t\t\t\t  placement=\"left\">\r\n\t\t\t\t  <div className={\"msg \" + styleSelectedMessage()} key={index}\r\n\t\t\t\t\t  style={{ display: \"flex\" }}>\r\n\t\t\t\t    {index >= 1 && array[index - 1].userId === array[index].userId\r\n\t\t\t\t\t ? <div style={{\r\n\t\t\t\t\t   minWidth: \"40px\",\r\n\t\t\t\t\t   width: \"40px\",\r\n\t\t\t\t\t   height: \"40px\"\r\n\t\t\t\t\t }}/>\r\n\t\t\t\t\t : <div style={{\r\n\t\t\t\t\t   fontFamily: \"Segoe UI,SegoeUI,\\\"Helvetica Neue\\\",Helvetica,Arial,sans-serif\",\r\n\t\t\t\t\t   backgroundColor: `${messageModel.color}`,\r\n\t\t\t\t\t   fontWeight: \"bold\",\r\n\t\t\t\t\t   minWidth: \"40px\",\r\n\t\t\t\t\t   width: \"40px\",\r\n\t\t\t\t\t   height: \"40px\",\r\n\t\t\t\t\t   textAlign: \"center\",\r\n\t\t\t\t\t   fontSize: \"20px\",\r\n\t\t\t\t\t   borderRadius: \"8px\",\r\n\t\t\t\t\t   border: `1px solid ${generateIconColorMode(theme)}`,\r\n\t\t\t\t\t   lineHeight: \"37px\"\r\n\t\t\t\t\t }}>\r\n\t\t\t\t\t   <div style={{ color: \"#FFFFFF\" }}>{messageModel.initials}</div>\r\n\t\t\t\t\t </div>\r\n\t\t\t\t    }\r\n\t\t\t\t    <div style={{ margin: \"4px\" }}>\r\n\t\t\t\t\t {index >= 1 && array[index - 1].userId === array[index].userId\r\n\t\t\t\t\t   ? <div/>\r\n\t\t\t\t\t   : <div>\r\n\t\t\t\t\t\t<b>{messageModel.sender} </b>\r\n\t\t\t\t\t   </div>\r\n\t\t\t\t\t }\r\n\t\t\t\t\t {\r\n\t\t\t\t\t   messageModel.type === TypeMessageEnum.TEXT\r\n\t\t\t\t\t\t? <div style={{ overflowWrap: \"break-word\" }}>\r\n\t\t\t\t\t\t  {messageModel.message}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t: <div>\r\n\t\t\t\t\t\t  {generateImageRender(messageModel)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t }\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t   ))}\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t  float: \"left\",\r\n\t\t\t\t  clear: \"both\"\r\n\t\t\t\t}}\r\n\t\t\t\t\t\t ref={(el) => {\r\n\t\t\t\t\t  messageEnd = el\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{\r\n\t\t\t   display: \"flex\",\r\n\t\t\t   flexDirection: \"column\"\r\n\t\t\t }}>\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t  boxSizing: \"border-box\",\r\n\t\t\t\t  borderBottom: \"0.5px solid #C8C8C8\"\r\n\t\t\t\t}}>\r\n\t\t\t\t  {\r\n\t\t\t\t    imagePreviewUrl &&\r\n\t\t\t\t\t\t  <div style={{\r\n\t\t\t\t\t   padding: \"10px\",\r\n\t\t\t\t\t   height: \"120px\",\r\n\t\t\t\t\t   maxWidth: \"120px\",\r\n\t\t\t\t\t   background: \"url('\" + imagePreviewUrl + \"')\",\r\n\t\t\t\t\t   backgroundSize: \"cover\",\r\n\t\t\t\t\t   position: \"relative\",\r\n\t\t\t\t\t   borderRadius: \"10%\"\r\n\t\t\t\t\t }}>\r\n\t\t\t\t\t\t\t  <IconButton style={{\r\n\t\t\t\t\t\t  height: \"20px\",\r\n\t\t\t\t\t\t  position: \"absolute\",\r\n\t\t\t\t\t\t  right: \"8px\",\r\n\t\t\t\t\t\t  top: \"8px\",\r\n\t\t\t\t\t\t  width: \"20px\"\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t  onClick={event => resetImageBuffer(event)}>\r\n\t\t\t\t\t\t\t\t  <HighlightOffIcon/>\r\n\t\t\t\t\t\t\t  </IconButton>\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t  }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t  display: \"flex\",\r\n\t\t\t\t  width: \"100%\",\r\n\t\t\t\t  alignItems: \"center\",\r\n\t\t\t\t  position: \"relative\",\r\n\t\t\t\t  bottom: \"0\",\r\n\t\t\t\t  padding: \"5px\"\r\n\t\t\t\t}}>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\taccept=\"image/*\"\r\n\t\t\t\t\t\t\tstyle={{ display: \"none\" }}\r\n\t\t\t\t\t\t\tid=\"raised-button-file\"\r\n\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\tonChange={event => previewFile(event)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<CallWindowComponent userId={userId || 0} groupUrl={groupUrl}/>\r\n\t\t\t\t\t\t<label htmlFor=\"raised-button-file\">\r\n\t\t\t\t\t\t\t<Button variant=\"text\" component=\"span\">\r\n\t\t\t\t\t\t\t\t<ImageIcon/>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<CustomTextField\r\n\t\t\t\t\t\t\tid={\"inputChatMessenger\"}\r\n\t\t\t\t\t\t\tlabel={\"Write a message\"}\r\n\t\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\t\tonClick={markMessageSeen}\r\n\t\t\t\t\t\t\thandleChange={(event: any) => handleChange(event)}\r\n\t\t\t\t\t\t\ttype={\"text\"}\r\n\t\t\t\t\t\t\tkeyUp={submitMessage}\r\n\t\t\t\t\t\t\tisMultiline={true}\r\n\t\t\t\t\t\t\tisDarkModeEnable={theme}\r\n\t\t\t\t\t\t\tname={\"mainWriteMessage\"}/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={sendMessage}\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginLeft: \"3px\",\r\n\t\t\t\t\t\tmaxWidth: \"20px\"\r\n\t\t\t\t\t   }}\r\n\t\t\t\t\t\t\tdisabled={!imageLoaded && message === \"\"}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<SendIcon/>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t }\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\context\\ws-context.tsx",["248"],"import { Client, IMessage } from \"@stomp/stompjs\"\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useAuthContext } from \"./auth-context\"\r\nimport { useLoaderContext } from \"./loader-context\"\r\nimport { playNotificationSound } from \"../components/utils/play-sound-notification\"\r\nimport { initWebSocket } from \"../config/websocket-config\"\r\nimport { FullMessageModel } from \"../interface-contract/full-message-model\"\r\nimport { OutputTransportDTO } from \"../interface-contract/input-transport-model\"\r\nimport { WrapperMessageModel } from \"../interface-contract/wrapper-message-model\"\r\nimport {\r\n  addChatHistory,\r\n  removeUserFromGroup, setAlerts,\r\n  setAllMessagesFetched,\r\n  setCallIncoming,\r\n  setCallUrl,\r\n  setGroupMessages, setGroupWithCurrentCall,\r\n  updateGroupsWithLastMessageSent,\r\n  wsHealthCheckConnected\r\n} from \"../reducers\"\r\nimport { StoreState } from \"../reducers/types\"\r\nimport { TransportActionEnum } from \"../utils/transport-action-enum\"\r\nimport { ILeaveGroupModel } from \"../interface-contract/leave-group-model\"\r\nimport { IUser } from \"../interface-contract/user/user-model\"\r\n\r\ntype WebSocketContextType = {\r\n  ws: Client | undefined\r\n  setWsClient: (ws: Client) => void\r\n}\r\n\r\nexport const WebSocketContext = React.createContext<WebSocketContextType>({} as WebSocketContextType)\r\n\r\nexport const WebsocketContextProvider: React.FunctionComponent<any> = ({ children }) => {\r\n  const [ws, setWsClient] = useState<Client | undefined>(undefined)\r\n  const { user } = useAuthContext()\r\n  const { setLoading } = useLoaderContext()\r\n  const dispatch = useDispatch()\r\n  const { userWsToken } = useSelector(\r\n    (state: StoreState) => state.globalReducer\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (user && user.wsToken !== null) {\r\n\t setLoading(true)\r\n\t initWs(user).then(() => (setLoading(false)))\r\n    }\r\n    return () => {\r\n\t dispatch(wsHealthCheckConnected({ isWsConnected: false }))\r\n    }\r\n  }, [userWsToken])\r\n\r\n  async function initWs (user: IUser) {\r\n    const wsObj = await initWebSocket(user.wsToken)\r\n    setWsClient(wsObj)\r\n    wsObj.onConnect = () => {\r\n\t dispatch(wsHealthCheckConnected({ isWsConnected: true }))\r\n\t setLoading(false)\r\n\t wsObj.subscribe(`/topic/user/${user.id}`, (res: IMessage) => {\r\n\t   const data = JSON.parse(res.body) as OutputTransportDTO\r\n\t   switch (data.action) {\r\n\t   case TransportActionEnum.FETCH_GROUP_MESSAGES: {\r\n\t\tconst result = data.object as WrapperMessageModel\r\n\t\tdispatch(setGroupMessages({ messages: result.messages }))\r\n\t\tdispatch(setAllMessagesFetched({\r\n\t\t  allMessagesFetched: result.lastMessage\r\n\t\t}))\r\n\t\tbreak\r\n\t   }\r\n\t   case TransportActionEnum.LEAVE_GROUP: {\r\n\t\tconst {\r\n\t\t  groupUrl,\r\n\t\t  groupName\r\n\t\t} = data.object as ILeaveGroupModel\r\n\t\tdispatch(removeUserFromGroup({ groupUrl }))\r\n\t\tdispatch(setAlerts({\r\n\t\t  alert: {\r\n\t\t    alert: \"success\",\r\n\t\t    isOpen: true,\r\n\t\t    text: `you left the group ${groupName}`\r\n\t\t  }\r\n\t\t}))\r\n\t\tbreak\r\n\t   }\r\n\t   case TransportActionEnum.ADD_CHAT_HISTORY: {\r\n\t\tconst wrapper = data.object as WrapperMessageModel\r\n\t\tdispatch(setAllMessagesFetched({ allMessagesFetched: wrapper.lastMessage }))\r\n\t\tconst messages = wrapper.messages\r\n\t\tdispatch(setGroupMessages({ messages }))\r\n\t   }\r\n\t\tbreak\r\n\t   case TransportActionEnum.SEND_GROUP_MESSAGE:\r\n\t\tbreak\r\n\t   case TransportActionEnum.NOTIFICATION_MESSAGE: {\r\n\t\tconst message = data.object as FullMessageModel\r\n\t\tdispatch(updateGroupsWithLastMessageSent({\r\n\t\t  userId: user.id,\r\n\t\t  message\r\n\t\t}))\r\n\t\t// updateGroupsWithLastMessageSent(dispatch, groups, message, user.id)\r\n\t\tdispatch(addChatHistory({ newMessage: message }))\r\n\t\tif (message.userId !== user.id) {\r\n\t\t  playNotificationSound()\r\n\t\t}\r\n\t   }\r\n\t\tbreak\r\n\t   case TransportActionEnum.CALL_INCOMING:\r\n\t\tdispatch(setCallIncoming({ callStarted: true }))\r\n\t\tdispatch(setCallUrl({\r\n\t\t  callUrl: data.object as unknown as string\r\n\t\t}))\r\n\t\tbreak\r\n\t   case TransportActionEnum.END_CALL: {\r\n\t\tconst groupUrl = data.object as unknown as string\r\n\t\tdispatch(setGroupWithCurrentCall({ groupUrl }))\r\n\t\tbreak\r\n\t   }\r\n\t   default:\r\n\t\tbreak\r\n\t   }\r\n\t })\r\n\r\n    }\r\n\r\n    wsObj.onWebSocketClose = (evt) => {\r\n\t console.log(\"ERROR DURING HANDSHAKE WITH SERVER\", evt)\r\n\t dispatch(wsHealthCheckConnected({ isWsConnected: false }))\r\n    }\r\n\r\n    wsObj.onWebSocketError = (evt) => {\r\n\t console.log(\"Cannot connect to server\", evt)\r\n    }\r\n    wsObj.activate()\r\n  }\r\n\r\n  return (\r\n    <WebSocketContext.Provider value={{\r\n\t ws,\r\n\t setWsClient\r\n    }}>\r\n\t {children}\r\n    </WebSocketContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useWebSocketContext = (): WebSocketContextType => useContext(WebSocketContext)\r\n","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\video\\video-control.tsx",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\video\\empty-room.tsx",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\video\\call-ended.tsx",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\video\\sound-control.tsx",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\video\\hang-up-control.tsx",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\utils\\transport-action-enum.ts",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\utils\\play-sound-notification.ts",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\all-users-dialog.tsx",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\skeleten-loader.tsx",["249"],"import { Avatar, ListItem, ListItemText, Skeleton } from \"@mui/material\"\r\nimport React from \"react\"\r\n\r\nexport function SkeletonLoader () {\r\n\tconst toLoad: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\ttoLoad.map((index) => (\r\n\t\t\t\t\t<ListItem key={ index }>\r\n\t\t\t\t\t\t<Avatar>\r\n\t\t\t\t\t\t\t<Skeleton variant={ \"circular\" } width={ 40 } height={ 40 }/>\r\n\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t<ListItemText primary={\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Skeleton variant=\"text\"/>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsecondary={\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Skeleton variant=\"text\"/>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t}/>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\video\\active-video-call.tsx",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\interface-contract\\transport-model.ts",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\no-data-component.tsx",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\websocket\\call-window-component.tsx",["250","251","252"],"import CallIcon from \"@mui/icons-material/Call\"\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\"\r\nimport React from \"react\"\r\nimport { UUIDv4 } from \"../../utils/uuid-generator\"\r\nimport { useWebSocketContext } from \"../../context/ws-context\"\r\nimport { RtcTransportDTO } from \"../../interface-contract/rtc-transport-model\"\r\nimport { RtcActionEnum } from \"../../utils/rtc-action-enum\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { StoreState } from \"../../reducers/types\"\r\nimport { setCallIncoming, setCallUrl, setGroupWithCurrentCall } from \"../../reducers\"\r\n\r\nexport const CallWindowComponent: React.FunctionComponent<{ userId: number, groupUrl: string }> = ({\r\n  userId,\r\n  groupUrl\r\n}) => {\r\n  const { ws } = useWebSocketContext()\r\n  const dispatch = useDispatch()\r\n  const {\r\n    callStarted,\r\n    callUrl\r\n  } = useSelector(\r\n    (state: StoreState) => state.globalReducer\r\n  )\r\n\r\n  const openCallPage = async (event: any) => {\r\n    event.preventDefault()\r\n    const startedCallUrl = UUIDv4()\r\n    if (ws) {\r\n\t const transport = new RtcTransportDTO(userId, groupUrl, RtcActionEnum.INIT_ROOM)\r\n\t ws.publish({\r\n\t   destination: `/app/rtc/${startedCallUrl}`,\r\n\t   body: JSON.stringify(transport)\r\n\t })\r\n\t const callPage = window.open(`http://localhost:3000/call/${startedCallUrl}`, \"_blank\") as any\r\n\t if (callPage) {\r\n\t   callPage.groupUrl = groupUrl\r\n\t   callPage.focus()\r\n\t }\r\n\t dispatch(setGroupWithCurrentCall({\r\n\t   roomUrl: startedCallUrl,\r\n\t   groupUrl\r\n\t }))\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    dispatch(setCallIncoming({ callStarted: false }))\r\n    dispatch(setCallUrl({ callUrl: \"\" }))\r\n  }\r\n\r\n  const startCall = () => {\r\n    dispatch(setCallIncoming({ callStarted: false }))\r\n    window.open(`http://localhost:3000/call/${callUrl}?mode=join`, \"_blank\")?.focus()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n\t <Button onClick={(event: any) => openCallPage(event)} variant=\"text\" component=\"span\">\r\n\t   <CallIcon/>\r\n\t </Button>\r\n\t <Dialog open={callStarted}>\r\n\t   <DialogTitle id=\"alert-dialog-title\">{\"Someone is calling you\"}</DialogTitle>\r\n\t   <DialogContent>\r\n\t\t<DialogContentText id=\"alert-dialog-description\">\r\n\t\t  Do you want to answer this call ? You can accept or deny the call\r\n\t\t</DialogContentText>\r\n\t   </DialogContent>\r\n\t   <DialogActions>\r\n\t\t<Button onClick={() => handleClose()} color=\"primary\">\r\n\t\t  Deny\r\n\t\t</Button>\r\n\t\t<Button onClick={() => startCall()} color=\"primary\">\r\n\t\t  Accept\r\n\t\t</Button>\r\n\t   </DialogActions>\r\n\t </Dialog>\r\n\t <div id={\"remote-video\"}/>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\partials\\image-preview.tsx",["253","254"],"import CloseIcon from \"@mui/icons-material/Close\"\r\nimport { IconButton, Tooltip } from \"@mui/material\"\r\nimport React, { useEffect } from \"react\"\r\nimport { useThemeContext } from \"../../context/theme-context\"\r\nimport { generateIconColorMode } from \"../utils/enable-dark-mode\"\r\n\r\ninterface ImagePreviewComponentType {\r\n  displayImagePreview: boolean\r\n  setDisplayImagePreview: (val: boolean) => void\r\n  // changeDisplayImagePreview: (action: string, src: string) => void\r\n  imgSrc: string\r\n}\r\n\r\nexport const ImagePreviewComponent: React.FunctionComponent<ImagePreviewComponentType> = ({\r\n\tsetDisplayImagePreview,\r\n\tdisplayImagePreview,\r\n\timgSrc\r\n}) => {\r\n\tconst { theme } = useThemeContext()\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.addEventListener(\"keyup\", closeDisplayImagePreview)\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener(\"keyup\", closeDisplayImagePreview)\r\n\t\t}\r\n\t}, [closeDisplayImagePreview])\r\n\r\n\tfunction handleImagePreview (event: any, action: string) {\r\n\t\tevent.preventDefault()\r\n\t\tswitch (action) {\r\n\t\tcase \"OPEN\":\r\n\t\t\tsetDisplayImagePreview(true)\r\n\t\t\tbreak\r\n\t\tcase \"CLOSE\":\r\n\t\t\tsetDisplayImagePreview(false)\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t\t\tthrow new Error(\"handleImagePreview failed\")\r\n\t\t}\r\n\t}\r\n\r\n\tfunction closeDisplayImagePreview (event: any) {\r\n\t\tevent.preventDefault()\r\n\t\tif (event.key === \"Escape\") {\r\n\t\t\tsetDisplayImagePreview(false)\r\n\t\t\tdocument.removeEventListener(\"keyup\", closeDisplayImagePreview, false)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{displayImagePreview &&\r\n          <div style={{\r\n          \tposition: \"fixed\",\r\n          \tzIndex: 1200,\r\n          \tright: \"0\",\r\n          \tbottom: \"0\",\r\n          \ttop: \"0\",\r\n          \tleft: \"0\",\r\n          \tbackdropFilter: \"blur(20px)\",\r\n          \tbackgroundColor: \"rgba(0, 0, 0, .5)\"\r\n          }}/>\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\tdisplayImagePreview &&\r\n          <div\r\n          \tstyle={{\r\n          \t\tposition: \"fixed\",\r\n          \t\tzIndex: 1300,\r\n          \t\tright: \"2%\",\r\n          \t\tbottom: \" 2%\",\r\n          \t\ttop: \" 3%\",\r\n          \t\tleft: \"2%\",\r\n          \t\tbackgroundColor: \"transparent\",\r\n          \t\tborderRadius: \"2px\",\r\n          \t\tborder: \"1px solid white\",\r\n          \t\tdisplay: \"flex\",\r\n          \t\tflexDirection: \"column\",\r\n          \t\talignItems: \"center\",\r\n          \t\tjustifyContent: \"center\"\r\n          \t}}>\r\n          \t<div style={{\r\n          \t\tzIndex: 1400,\r\n          \t\tright: \"10px\",\r\n          \t\tposition: \"absolute\",\r\n          \t\ttop: \"10px\"\r\n          \t}}>\r\n          \t\t<Tooltip title='Press \"Escape\" to close'>\r\n          \t\t\t<IconButton onClick={event => handleImagePreview(event, \"CLOSE\")}>\r\n          \t\t\t\t<CloseIcon style={{ color: generateIconColorMode(theme) }}/>\r\n          \t\t\t</IconButton>\r\n          \t\t</Tooltip>\r\n          \t</div>\r\n          \t<div style={{\r\n          \t\tfilter: \"blur(1.5rem)\",\r\n          \t\tposition: \"absolute\",\r\n          \t\twidth: \"100%\",\r\n          \t\theight: \"100%\",\r\n          \t\topacity: \"0.5\"\r\n          \t}}/>\r\n          \t<img style={{ maxHeight: \"-webkit-fill-available\" }} src={imgSrc}\r\n          \t\talt=\"real size\"/>\r\n          </div>\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n","C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\utils\\string-size-calculator.ts",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\components\\websocket\\group-action-enum.ts",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\utils\\date-formater.ts",[],"C:\\Users\\Tung Thanh\\Desktop\\Project_HPT\\react-spring-messenger-project\\Client\\src\\utils\\type-group-enum.ts",[],{"ruleId":"255","severity":1,"message":"256","line":23,"column":8,"nodeType":"257","messageId":"258","endLine":23,"endColumn":34},{"ruleId":"255","severity":1,"message":"259","line":23,"column":27,"nodeType":"260","messageId":"261","endLine":23,"endColumn":33},{"ruleId":"255","severity":1,"message":"256","line":131,"column":8,"nodeType":"257","messageId":"258","endLine":131,"endColumn":30},{"ruleId":"262","severity":1,"message":"263","line":14,"column":59,"nodeType":"264","messageId":"265","endLine":14,"endColumn":62,"suggestions":"266"},{"ruleId":"262","severity":1,"message":"263","line":11,"column":53,"nodeType":"264","messageId":"265","endLine":11,"endColumn":56,"suggestions":"267"},{"ruleId":"262","severity":1,"message":"263","line":14,"column":54,"nodeType":"264","messageId":"265","endLine":14,"endColumn":57,"suggestions":"268"},{"ruleId":"255","severity":1,"message":"256","line":10,"column":37,"nodeType":"269","messageId":"258","endLine":10,"endColumn":42},{"ruleId":"262","severity":1,"message":"263","line":21,"column":33,"nodeType":"264","messageId":"265","endLine":21,"endColumn":36,"suggestions":"270"},{"ruleId":"262","severity":1,"message":"263","line":26,"column":44,"nodeType":"264","messageId":"265","endLine":26,"endColumn":47,"suggestions":"271"},{"ruleId":"262","severity":1,"message":"263","line":45,"column":40,"nodeType":"264","messageId":"265","endLine":45,"endColumn":43,"suggestions":"272"},{"ruleId":"273","severity":1,"message":"274","line":32,"column":10,"nodeType":"260","messageId":"275","endLine":32,"endColumn":16},{"ruleId":"273","severity":1,"message":"276","line":13,"column":10,"nodeType":"260","messageId":"275","endLine":13,"endColumn":20},{"ruleId":"262","severity":1,"message":"263","line":28,"column":29,"nodeType":"264","messageId":"265","endLine":28,"endColumn":32,"suggestions":"277"},{"ruleId":"262","severity":1,"message":"263","line":42,"column":32,"nodeType":"264","messageId":"265","endLine":42,"endColumn":35,"suggestions":"278"},{"ruleId":"262","severity":1,"message":"263","line":66,"column":19,"nodeType":"264","messageId":"265","endLine":66,"endColumn":22,"suggestions":"279"},{"ruleId":"262","severity":1,"message":"263","line":36,"column":41,"nodeType":"264","messageId":"265","endLine":36,"endColumn":44,"suggestions":"280"},{"ruleId":"262","severity":1,"message":"263","line":75,"column":17,"nodeType":"264","messageId":"265","endLine":75,"endColumn":20,"suggestions":"281"},{"ruleId":"262","severity":1,"message":"263","line":110,"column":29,"nodeType":"264","messageId":"265","endLine":110,"endColumn":32,"suggestions":"282"},{"ruleId":"255","severity":1,"message":"256","line":6,"column":32,"nodeType":"269","messageId":"258","endLine":6,"endColumn":37},{"ruleId":"262","severity":1,"message":"263","line":63,"column":40,"nodeType":"264","messageId":"265","endLine":63,"endColumn":43,"suggestions":"283"},{"ruleId":"262","severity":1,"message":"263","line":84,"column":44,"nodeType":"264","messageId":"265","endLine":84,"endColumn":47,"suggestions":"284"},{"ruleId":"262","severity":1,"message":"263","line":89,"column":43,"nodeType":"264","messageId":"265","endLine":89,"endColumn":46,"suggestions":"285"},{"ruleId":"262","severity":1,"message":"263","line":213,"column":19,"nodeType":"264","messageId":"265","endLine":213,"endColumn":22,"suggestions":"286"},{"ruleId":"262","severity":1,"message":"263","line":240,"column":19,"nodeType":"264","messageId":"265","endLine":240,"endColumn":22,"suggestions":"287"},{"ruleId":"262","severity":1,"message":"263","line":43,"column":25,"nodeType":"264","messageId":"265","endLine":43,"endColumn":28,"suggestions":"288"},{"ruleId":"262","severity":1,"message":"263","line":46,"column":19,"nodeType":"264","messageId":"265","endLine":46,"endColumn":22,"suggestions":"289"},{"ruleId":"262","severity":1,"message":"263","line":47,"column":21,"nodeType":"264","messageId":"265","endLine":47,"endColumn":24,"suggestions":"290"},{"ruleId":"262","severity":1,"message":"263","line":53,"column":32,"nodeType":"264","messageId":"265","endLine":53,"endColumn":35,"suggestions":"291"},{"ruleId":"262","severity":1,"message":"263","line":57,"column":30,"nodeType":"264","messageId":"265","endLine":57,"endColumn":33,"suggestions":"292"},{"ruleId":"262","severity":1,"message":"263","line":107,"column":37,"nodeType":"264","messageId":"265","endLine":107,"endColumn":40,"suggestions":"293"},{"ruleId":"262","severity":1,"message":"263","line":114,"column":32,"nodeType":"264","messageId":"265","endLine":114,"endColumn":35,"suggestions":"294"},{"ruleId":"262","severity":1,"message":"263","line":129,"column":34,"nodeType":"264","messageId":"265","endLine":129,"endColumn":37,"suggestions":"295"},{"ruleId":"262","severity":1,"message":"263","line":142,"column":33,"nodeType":"264","messageId":"265","endLine":142,"endColumn":36,"suggestions":"296"},{"ruleId":"262","severity":1,"message":"263","line":199,"column":33,"nodeType":"264","messageId":"265","endLine":199,"endColumn":36,"suggestions":"297"},{"ruleId":"262","severity":1,"message":"263","line":400,"column":30,"nodeType":"264","messageId":"265","endLine":400,"endColumn":33,"suggestions":"298"},{"ruleId":"262","severity":1,"message":"263","line":33,"column":64,"nodeType":"264","messageId":"265","endLine":33,"endColumn":67,"suggestions":"299"},{"ruleId":"255","severity":1,"message":"256","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":34},{"ruleId":"262","severity":1,"message":"263","line":25,"column":38,"nodeType":"264","messageId":"265","endLine":25,"endColumn":41,"suggestions":"300"},{"ruleId":"262","severity":1,"message":"263","line":34,"column":93,"nodeType":"264","messageId":"265","endLine":34,"endColumn":96,"suggestions":"301"},{"ruleId":"262","severity":1,"message":"263","line":58,"column":28,"nodeType":"264","messageId":"265","endLine":58,"endColumn":31,"suggestions":"302"},{"ruleId":"262","severity":1,"message":"263","line":28,"column":38,"nodeType":"264","messageId":"265","endLine":28,"endColumn":41,"suggestions":"303"},{"ruleId":"262","severity":1,"message":"263","line":42,"column":44,"nodeType":"264","messageId":"265","endLine":42,"endColumn":47,"suggestions":"304"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","Argument 'config' should be typed.","Identifier","missingArgType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["305","306"],["307","308"],["309","310"],"ArrowFunctionExpression",["311","312"],["313","314"],["315","316"],"@typescript-eslint/no-unused-vars","'cookie' is assigned a value but never used.","unusedVar","'AxiosError' is defined but never used.",["317","318"],["319","320"],["321","322"],["323","324"],["325","326"],["327","328"],["329","330"],["331","332"],["333","334"],["335","336"],["337","338"],["339","340"],["341","342"],["343","344"],["345","346"],["347","348"],["349","350"],["351","352"],["353","354"],["355","356"],["357","358"],["359","360"],["361","362"],["363","364"],["365","366"],["367","368"],["369","370"],["371","372"],{"messageId":"373","fix":"374","desc":"375"},{"messageId":"376","fix":"377","desc":"378"},{"messageId":"373","fix":"379","desc":"375"},{"messageId":"376","fix":"380","desc":"378"},{"messageId":"373","fix":"381","desc":"375"},{"messageId":"376","fix":"382","desc":"378"},{"messageId":"373","fix":"383","desc":"375"},{"messageId":"376","fix":"384","desc":"378"},{"messageId":"373","fix":"385","desc":"375"},{"messageId":"376","fix":"386","desc":"378"},{"messageId":"373","fix":"387","desc":"375"},{"messageId":"376","fix":"388","desc":"378"},{"messageId":"373","fix":"389","desc":"375"},{"messageId":"376","fix":"390","desc":"378"},{"messageId":"373","fix":"391","desc":"375"},{"messageId":"376","fix":"392","desc":"378"},{"messageId":"373","fix":"393","desc":"375"},{"messageId":"376","fix":"394","desc":"378"},{"messageId":"373","fix":"395","desc":"375"},{"messageId":"376","fix":"396","desc":"378"},{"messageId":"373","fix":"397","desc":"375"},{"messageId":"376","fix":"398","desc":"378"},{"messageId":"373","fix":"399","desc":"375"},{"messageId":"376","fix":"400","desc":"378"},{"messageId":"373","fix":"401","desc":"375"},{"messageId":"376","fix":"402","desc":"378"},{"messageId":"373","fix":"403","desc":"375"},{"messageId":"376","fix":"404","desc":"378"},{"messageId":"373","fix":"405","desc":"375"},{"messageId":"376","fix":"406","desc":"378"},{"messageId":"373","fix":"407","desc":"375"},{"messageId":"376","fix":"408","desc":"378"},{"messageId":"373","fix":"409","desc":"375"},{"messageId":"376","fix":"410","desc":"378"},{"messageId":"373","fix":"411","desc":"375"},{"messageId":"376","fix":"412","desc":"378"},{"messageId":"373","fix":"413","desc":"375"},{"messageId":"376","fix":"414","desc":"378"},{"messageId":"373","fix":"415","desc":"375"},{"messageId":"376","fix":"416","desc":"378"},{"messageId":"373","fix":"417","desc":"375"},{"messageId":"376","fix":"418","desc":"378"},{"messageId":"373","fix":"419","desc":"375"},{"messageId":"376","fix":"420","desc":"378"},{"messageId":"373","fix":"421","desc":"375"},{"messageId":"376","fix":"422","desc":"378"},{"messageId":"373","fix":"423","desc":"375"},{"messageId":"376","fix":"424","desc":"378"},{"messageId":"373","fix":"425","desc":"375"},{"messageId":"376","fix":"426","desc":"378"},{"messageId":"373","fix":"427","desc":"375"},{"messageId":"376","fix":"428","desc":"378"},{"messageId":"373","fix":"429","desc":"375"},{"messageId":"376","fix":"430","desc":"378"},{"messageId":"373","fix":"431","desc":"375"},{"messageId":"376","fix":"432","desc":"378"},{"messageId":"373","fix":"433","desc":"375"},{"messageId":"376","fix":"434","desc":"378"},{"messageId":"373","fix":"435","desc":"375"},{"messageId":"376","fix":"436","desc":"378"},{"messageId":"373","fix":"437","desc":"375"},{"messageId":"376","fix":"438","desc":"378"},{"messageId":"373","fix":"439","desc":"375"},{"messageId":"376","fix":"440","desc":"378"},{"messageId":"373","fix":"441","desc":"375"},{"messageId":"376","fix":"442","desc":"378"},{"messageId":"373","fix":"443","desc":"375"},{"messageId":"376","fix":"444","desc":"378"},"suggestUnknown",{"range":"445","text":"446"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"445","text":"447"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"448","text":"446"},{"range":"448","text":"447"},{"range":"449","text":"446"},{"range":"449","text":"447"},{"range":"450","text":"446"},{"range":"450","text":"447"},{"range":"451","text":"446"},{"range":"451","text":"447"},{"range":"452","text":"446"},{"range":"452","text":"447"},{"range":"453","text":"446"},{"range":"453","text":"447"},{"range":"454","text":"446"},{"range":"454","text":"447"},{"range":"455","text":"446"},{"range":"455","text":"447"},{"range":"456","text":"446"},{"range":"456","text":"447"},{"range":"457","text":"446"},{"range":"457","text":"447"},{"range":"458","text":"446"},{"range":"458","text":"447"},{"range":"459","text":"446"},{"range":"459","text":"447"},{"range":"460","text":"446"},{"range":"460","text":"447"},{"range":"461","text":"446"},{"range":"461","text":"447"},{"range":"462","text":"446"},{"range":"462","text":"447"},{"range":"463","text":"446"},{"range":"463","text":"447"},{"range":"464","text":"446"},{"range":"464","text":"447"},{"range":"465","text":"446"},{"range":"465","text":"447"},{"range":"466","text":"446"},{"range":"466","text":"447"},{"range":"467","text":"446"},{"range":"467","text":"447"},{"range":"468","text":"446"},{"range":"468","text":"447"},{"range":"469","text":"446"},{"range":"469","text":"447"},{"range":"470","text":"446"},{"range":"470","text":"447"},{"range":"471","text":"446"},{"range":"471","text":"447"},{"range":"472","text":"446"},{"range":"472","text":"447"},{"range":"473","text":"446"},{"range":"473","text":"447"},{"range":"474","text":"446"},{"range":"474","text":"447"},{"range":"475","text":"446"},{"range":"475","text":"447"},{"range":"476","text":"446"},{"range":"476","text":"447"},{"range":"477","text":"446"},{"range":"477","text":"447"},{"range":"478","text":"446"},{"range":"478","text":"447"},{"range":"479","text":"446"},{"range":"479","text":"447"},{"range":"480","text":"446"},{"range":"480","text":"447"},[580,583],"unknown","never",[351,354],[339,342],[828,831],[952,955],[1524,1527],[1200,1203],[1496,1499],[1930,1933],[1776,1779],[3082,3085],[3865,3868],[2489,2492],[2998,3001],[3117,3120],[6278,6281],[6938,6941],[1219,1222],[1303,1306],[1337,1340],[1518,1521],[1596,1599],[4143,4146],[4291,4294],[4677,4680],[4981,4984],[6389,6392],[11947,11950],[1441,1444],[1002,1005],[1376,1379],[1939,1942],[940,943],[1246,1249]]