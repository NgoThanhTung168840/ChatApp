{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tung Thanh\\\\Desktop\\\\Project_HPT\\\\react-spring-messenger-project\\\\Client\\\\src\\\\context\\\\loader-context.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultStatus = false;\nconst LoaderContext = /*#__PURE__*/React.createContext({});\nexport const LoaderProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState(defaultStatus);\n  return /*#__PURE__*/_jsxDEV(LoaderContext.Provider, {\n    value: {\n      loading,\n      setLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n};\n_s(LoaderProvider, \"SHF06/KRquP5Ybri9HQxBi9zaOw=\");\n_c = LoaderProvider;\nexport const useLoaderContext = () => {\n  _s2();\n  return useContext(LoaderContext);\n};\n_s2(useLoaderContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"LoaderProvider\");","map":{"version":3,"names":["React","useContext","useState","defaultStatus","LoaderContext","createContext","LoaderProvider","children","loading","setLoading","useLoaderContext"],"sources":["C:/Users/Tung Thanh/Desktop/Project_HPT/react-spring-messenger-project/Client/src/context/loader-context.tsx"],"sourcesContent":["import React, { useContext, useState } from \"react\"\r\n\r\nconst defaultStatus = false\r\n\r\ntype LoaderContextType = {\r\n    loading: boolean;\r\n    setLoading: (isLoading: boolean) => void\r\n};\r\n\r\nconst LoaderContext = React.createContext<LoaderContextType>(\r\n    {} as LoaderContextType\r\n)\r\n\r\nexport const LoaderProvider: React.FunctionComponent<any> = ({ children }) => {\r\n\tconst [loading, setLoading] = useState<boolean>(defaultStatus)\r\n\treturn (\r\n\t\t<LoaderContext.Provider value={ { loading, setLoading } }>\r\n\t\t\t{ children }\r\n\t\t</LoaderContext.Provider>\r\n\t)\r\n}\r\n\r\nexport const useLoaderContext = (): LoaderContextType => useContext(LoaderContext)\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAEnD,MAAMC,aAAa,GAAG,KAAK;AAO3B,MAAMC,aAAa,gBAAGJ,KAAK,CAACK,aAAa,CACrC,CAAC,CAAC,CACL;AAED,OAAO,MAAMC,cAA4C,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACxE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAUC,aAAa,CAAC;EAC9D,oBACC,QAAC,aAAa,CAAC,QAAQ;IAAC,KAAK,EAAG;MAAEK,OAAO;MAAEC;IAAW,CAAG;IAAA,UACtDF;EAAQ;IAAA;IAAA;IAAA;EAAA,QACc;AAE3B,CAAC;AAAA,GAPYD,cAA4C;AAAA,KAA5CA,cAA4C;AASzD,OAAO,MAAMI,gBAAgB,GAAG;EAAA;EAAA,OAAyBT,UAAU,CAACG,aAAa,CAAC;AAAA;AAAA,IAArEM,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}