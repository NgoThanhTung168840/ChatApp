{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tung Thanh\\\\Desktop\\\\Project_HPT\\\\react-spring-messenger-project\\\\Client\\\\src\\\\components\\\\websocket\\\\video-component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { initWebSocket } from \"../../config/websocket-config\";\nimport { Box, Skeleton } from \"@mui/material\";\nimport { useLocation } from \"react-router-dom\";\nimport { RtcTransportDTO } from \"../../interface-contract/rtc-transport-model\";\nimport { RtcActionEnum } from \"../../utils/rtc-action-enum\";\nimport { SoundControl } from \"../partials/video/sound-control\";\nimport { VideoControl } from \"../partials/video/video-control\";\nimport { EmptyRoom } from \"../partials/video/empty-room\";\nimport \"./video-component-style.css\";\nimport { HangUpControl } from \"../partials/video/hang-up-control\";\nimport { CallEnded } from \"../partials/video/call-ended\";\nimport { HttpService } from \"../../service/http-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getUuid = location => {\n  const temp = location.split(\"/\");\n  return temp[temp.length - 1];\n};\nexport const VideoComponent = () => {\n  _s();\n  const [ws, setWs] = useState();\n  const [currentUserId, setCurrentUserId] = useState(-1);\n  const [isPageAuthorized, setPageStatus] = useState(true);\n  const [callEnded, setCallEnded] = useState(false);\n  const [currentLocalStream, setLocalStream] = useState();\n\n  // const configuration = { 'iceServers': [{ 'urls': 'stun:stun.l.google.com:19302' }] }\n  const configuration = {\n    \"iceServers\": []\n  };\n  const [localVideoReady, setLocalVideoState] = useState(false);\n  const peerConnection = new RTCPeerConnection(configuration);\n  const location = useLocation();\n  const isUserInitiateSession = location.search.split(\"=\")[1];\n  const roomUrl = getUuid(location.pathname);\n  const groupUrlFromParent = window.groupUrl;\n  const http = new HttpService();\n  peerConnection.addEventListener(\"connectionstatechange\", () => {\n    switch (peerConnection.connectionState) {\n      case \"new\":\n        console.log(\"Connecting...\");\n        break;\n      case \"connected\":\n        console.log(\"Online\");\n        break;\n      case \"disconnected\":\n        console.log(\"Disconnecting...\");\n        break;\n      case \"closed\":\n        console.log(\"Offline\");\n        break;\n      case \"failed\":\n        console.log(\"Error\");\n        break;\n      default:\n        console.log(\"Unknown\");\n        break;\n    }\n  });\n  peerConnection.addEventListener(\"icecandidate\", event => {\n    console.log(\"EVENT\", event.candidate);\n    if (ws && event.candidate) {\n      const iceCandidateResponse = new RtcTransportDTO(currentUserId, \"\", RtcActionEnum.ICE_CANDIDATE, undefined, undefined, event.candidate);\n      ws.publish({\n        destination: `/app/rtc/${roomUrl}`,\n        body: JSON.stringify(iceCandidateResponse)\n      });\n    }\n  });\n  peerConnection.addEventListener(\"icecandidateerror\", event => {\n    // eslint-disable-next-line no-console\n    console.log(\"ERROR EVENT\", event);\n  });\n\n  // peerConnection.addEventListener('icegatheringstatechange', (event) => {\n  //   console.log('icegatheringstatechange', event)\n  // })\n\n  peerConnection.addEventListener(\"track\", event => {\n    const remoteVideo = document.querySelector(\"video#localVideo\");\n    const [remoteStream] = event.streams;\n    remoteVideo.srcObject = remoteStream;\n  });\n  useEffect(() => {\n    initRTC().then(res => {\n      if (res) {\n        initWs();\n      }\n    });\n  }, [groupUrlFromParent]);\n  const initWs = async () => {\n    const {\n      data\n    } = await http.pingRoute();\n    const {\n      user\n    } = data;\n    setCurrentUserId(user.id);\n    const wsObj = initWebSocket(user.wsToken);\n    setWs(wsObj);\n    wsObj.onConnect = async () => {\n      wsObj.subscribe(`/topic/rtc/${user.id}`, async res => {\n        const rtcTransportDto = JSON.parse(res.body);\n        switch (rtcTransportDto.action) {\n          case RtcActionEnum.SEND_ANSWER:\n            {\n              if (rtcTransportDto.answer) {\n                await peerConnection.setRemoteDescription(new RTCSessionDescription(rtcTransportDto.answer));\n              }\n              break;\n            }\n          case RtcActionEnum.SEND_OFFER:\n            {\n              if (rtcTransportDto.offer) {\n                await peerConnection.setRemoteDescription(new RTCSessionDescription(rtcTransportDto.offer));\n                const answer = await peerConnection.createAnswer();\n                await peerConnection.setLocalDescription(answer);\n                const answerTransport = new RtcTransportDTO(user.id, \"\", RtcActionEnum.SEND_ANSWER, undefined, answer);\n                wsObj.publish({\n                  destination: `/app/rtc/${roomUrl}`,\n                  body: JSON.stringify(answerTransport)\n                });\n              }\n              break;\n            }\n          case RtcActionEnum.ICE_CANDIDATE:\n            {\n              if (rtcTransportDto.iceCandidate) {\n                await peerConnection.addIceCandidate(rtcTransportDto.iceCandidate);\n              }\n              break;\n            }\n          default:\n            break;\n        }\n      });\n      if (isUserInitiateSession === \"join\") {\n        const offer = await peerConnection.createOffer();\n        await peerConnection.setLocalDescription(offer);\n        const transport = new RtcTransportDTO(user.id, \"\", RtcActionEnum.JOIN_ROOM, offer);\n        wsObj.publish({\n          destination: `/app/rtc/${roomUrl}`,\n          body: JSON.stringify(transport)\n        });\n      }\n    };\n    wsObj.activate();\n  };\n  const changeVideoStatus = stopVideo => {\n    if (currentLocalStream) {\n      if (stopVideo) {\n        currentLocalStream.getTracks().forEach(track => {\n          track.stop();\n        });\n      } else {\n        currentLocalStream.getTracks().forEach(track => {\n          peerConnection.addTrack(track, currentLocalStream);\n        });\n      }\n    }\n  };\n  const initRTC = async () => {\n    const url = getUuid(location.pathname);\n    const urlCheckResponse = await http.ensureRoomExists(url);\n    setPageStatus(urlCheckResponse.data);\n    if (urlCheckResponse && !urlCheckResponse.data) {\n      return false;\n    }\n    try {\n      const constraints = {\n        \"video\": true,\n        \"audio\": true\n      };\n      const localStream = await navigator.mediaDevices.getUserMedia(constraints);\n      setLocalStream(localStream);\n      const videoElement = document.querySelector(\"video#localVideo\");\n      localStream.getTracks().forEach(track => {\n        peerConnection.addTrack(track, localStream);\n      });\n      if (videoElement) {\n        setLocalVideoState(true);\n        videoElement.srcObject = localStream;\n      }\n      return true;\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(\"Error accessing media devices.\", error);\n      return false;\n    }\n  };\n  const hangOnRoom = () => {\n    peerConnection.close();\n    setCallEnded(true);\n    if (ws) {\n      const transport = new RtcTransportDTO(currentUserId, groupUrlFromParent, RtcActionEnum.LEAVE_ROOM);\n      ws.publish({\n        destination: `/app/rtc/${roomUrl}`,\n        body: JSON.stringify(transport)\n      });\n    }\n    if (currentLocalStream) {\n      currentLocalStream.getTracks().forEach(track => {\n        track.stop();\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [isPageAuthorized ? !callEnded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        m: 2,\n        display: \"flex\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          m: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            style: {\n              display: localVideoReady ? \"block\" : \"none\"\n            },\n            id: \"localVideo\",\n            width: 600,\n            height: 400,\n            autoPlay: true,\n            playsInline: true,\n            controls: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 7\n          }, this), !localVideoReady && /*#__PURE__*/_jsxDEV(Skeleton, {\n            variant: \"rectangular\",\n            width: 600,\n            height: 400\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        position: \"fixed\",\n        width: \"100%\",\n        bottom: \"10px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(SoundControl, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(VideoControl, {\n          changeVideoStatus: changeVideoStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(HangUpControl, {\n          hangOnRoom: hangOnRoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(EmptyRoom, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 3\n    }, this), callEnded && /*#__PURE__*/_jsxDEV(CallEnded, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoComponent, \"8FudkhFLTACzb/X7k54qtkOCfrM=\", false, function () {\n  return [useLocation];\n});\n_c = VideoComponent;\nvar _c;\n$RefreshReg$(_c, \"VideoComponent\");","map":{"version":3,"names":["React","useEffect","useState","initWebSocket","Box","Skeleton","useLocation","RtcTransportDTO","RtcActionEnum","SoundControl","VideoControl","EmptyRoom","HangUpControl","CallEnded","HttpService","getUuid","location","temp","split","length","VideoComponent","ws","setWs","currentUserId","setCurrentUserId","isPageAuthorized","setPageStatus","callEnded","setCallEnded","currentLocalStream","setLocalStream","configuration","localVideoReady","setLocalVideoState","peerConnection","RTCPeerConnection","isUserInitiateSession","search","roomUrl","pathname","groupUrlFromParent","window","groupUrl","http","addEventListener","connectionState","console","log","event","candidate","iceCandidateResponse","ICE_CANDIDATE","undefined","publish","destination","body","JSON","stringify","remoteVideo","document","querySelector","remoteStream","streams","srcObject","initRTC","then","res","initWs","data","pingRoute","user","id","wsObj","wsToken","onConnect","subscribe","rtcTransportDto","parse","action","SEND_ANSWER","answer","setRemoteDescription","RTCSessionDescription","SEND_OFFER","offer","createAnswer","setLocalDescription","answerTransport","iceCandidate","addIceCandidate","createOffer","transport","JOIN_ROOM","activate","changeVideoStatus","stopVideo","getTracks","forEach","track","stop","addTrack","url","urlCheckResponse","ensureRoomExists","constraints","localStream","navigator","mediaDevices","getUserMedia","videoElement","error","hangOnRoom","close","LEAVE_ROOM","display"],"sources":["C:/Users/Tung Thanh/Desktop/Project_HPT/react-spring-messenger-project/Client/src/components/websocket/video-component.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { initWebSocket } from \"../../config/websocket-config\"\r\nimport { Client, IMessage } from \"@stomp/stompjs\"\r\nimport { Box, Skeleton } from \"@mui/material\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { RtcTransportDTO } from \"../../interface-contract/rtc-transport-model\"\r\nimport { RtcActionEnum } from \"../../utils/rtc-action-enum\"\r\nimport { SoundControl } from \"../partials/video/sound-control\"\r\nimport { VideoControl } from \"../partials/video/video-control\"\r\nimport { EmptyRoom } from \"../partials/video/empty-room\"\r\nimport \"./video-component-style.css\"\r\nimport { HangUpControl } from \"../partials/video/hang-up-control\"\r\nimport { CallEnded } from \"../partials/video/call-ended\"\r\nimport { HttpService } from \"../../service/http-service\"\r\n\r\nconst getUuid = (location: string): string => {\r\n  const temp = location.split(\"/\")\r\n  return temp[temp.length - 1]\r\n}\r\n\r\nexport const VideoComponent = (): JSX.Element => {\r\n  const [ws, setWs] = useState<Client | null>()\r\n  const [currentUserId, setCurrentUserId] = useState<number>(-1)\r\n  const [isPageAuthorized, setPageStatus] = useState<boolean>(true)\r\n  const [callEnded, setCallEnded] = useState<boolean>(false)\r\n  const [currentLocalStream, setLocalStream] = useState<MediaStream | undefined>()\r\n\r\n  // const configuration = { 'iceServers': [{ 'urls': 'stun:stun.l.google.com:19302' }] }\r\n  const configuration = { \"iceServers\": [] }\r\n  const [localVideoReady, setLocalVideoState] = useState<boolean>(false)\r\n  const peerConnection = new RTCPeerConnection(configuration)\r\n  const location = useLocation()\r\n\r\n  const isUserInitiateSession = location.search.split(\"=\")[1]\r\n  const roomUrl = getUuid(location.pathname)\r\n  const groupUrlFromParent = (window as any).groupUrl\r\n  const http = new HttpService()\r\n\r\n  peerConnection.addEventListener(\"connectionstatechange\", () => {\r\n    switch (peerConnection.connectionState) {\r\n    case \"new\":\r\n\t console.log(\"Connecting...\")\r\n\t break\r\n    case \"connected\":\r\n\t console.log(\"Online\")\r\n\t break\r\n    case \"disconnected\":\r\n\t console.log(\"Disconnecting...\")\r\n\t break\r\n    case \"closed\":\r\n\t console.log(\"Offline\")\r\n\t break\r\n    case \"failed\":\r\n\t console.log(\"Error\")\r\n\t break\r\n    default:\r\n\t console.log(\"Unknown\")\r\n\t break\r\n    }\r\n  })\r\n\r\n  peerConnection.addEventListener(\"icecandidate\", (event) => {\r\n    console.log(\"EVENT\", event.candidate)\r\n    if (ws && event.candidate) {\r\n\t const iceCandidateResponse = new RtcTransportDTO(currentUserId, \"\", RtcActionEnum.ICE_CANDIDATE, undefined, undefined, event.candidate)\r\n\t ws.publish({\r\n\t   destination: `/app/rtc/${roomUrl}`,\r\n\t   body: JSON.stringify(iceCandidateResponse)\r\n\t })\r\n    }\r\n  })\r\n\r\n  peerConnection.addEventListener(\"icecandidateerror\", (event) => {\r\n    // eslint-disable-next-line no-console\r\n    console.log(\"ERROR EVENT\", event)\r\n  })\r\n\r\n  // peerConnection.addEventListener('icegatheringstatechange', (event) => {\r\n  //   console.log('icegatheringstatechange', event)\r\n  // })\r\n\r\n  peerConnection.addEventListener(\"track\", (event) => {\r\n    const remoteVideo = document.querySelector(\"video#localVideo\") as HTMLVideoElement\r\n    const [remoteStream] = event.streams\r\n    remoteVideo.srcObject = remoteStream\r\n  })\r\n\r\n  useEffect(() => {\r\n    initRTC().then((res) => {\r\n\t if (res) {\r\n\t   initWs()\r\n\t }\r\n    })\r\n  }, [groupUrlFromParent])\r\n\r\n  const initWs = async () => {\r\n    const { data } = await http.pingRoute()\r\n    const { user } = data\r\n    setCurrentUserId(user.id)\r\n    const wsObj = initWebSocket(user.wsToken)\r\n\r\n    setWs(wsObj)\r\n    wsObj.onConnect = async () => {\r\n\t wsObj.subscribe(`/topic/rtc/${user.id}`, async (res: IMessage) => {\r\n\t   const rtcTransportDto = JSON.parse(res.body) as RtcTransportDTO\r\n\t   switch (rtcTransportDto.action) {\r\n\t   case RtcActionEnum.SEND_ANSWER: {\r\n\t\tif (rtcTransportDto.answer) {\r\n\t\t  await peerConnection.setRemoteDescription(new RTCSessionDescription(rtcTransportDto.answer))\r\n\t\t}\r\n\t\tbreak\r\n\t   }\r\n\t   case RtcActionEnum.SEND_OFFER: {\r\n\t\tif (rtcTransportDto.offer) {\r\n\t\t  await peerConnection.setRemoteDescription(new RTCSessionDescription(rtcTransportDto.offer))\r\n\t\t  const answer = await peerConnection.createAnswer()\r\n\t\t  await peerConnection.setLocalDescription(answer)\r\n\t\t  const answerTransport = new RtcTransportDTO(user.id, \"\", RtcActionEnum.SEND_ANSWER, undefined, answer)\r\n\t\t  wsObj.publish({\r\n\t\t    destination: `/app/rtc/${roomUrl}`,\r\n\t\t    body: JSON.stringify(answerTransport)\r\n\t\t  })\r\n\t\t}\r\n\t\tbreak\r\n\t   }\r\n\t   case RtcActionEnum.ICE_CANDIDATE: {\r\n\t\tif (rtcTransportDto.iceCandidate) {\r\n\t\t  await peerConnection.addIceCandidate(rtcTransportDto.iceCandidate)\r\n\t\t}\r\n\t\tbreak\r\n\t   }\r\n\t   default:\r\n\t\tbreak\r\n\t   }\r\n\t })\r\n\t if (isUserInitiateSession === \"join\") {\r\n\t   const offer = await peerConnection.createOffer()\r\n\t   await peerConnection.setLocalDescription(offer)\r\n\t   const transport = new RtcTransportDTO(user.id, \"\", RtcActionEnum.JOIN_ROOM, offer)\r\n\t   wsObj.publish({\r\n\t\tdestination: `/app/rtc/${roomUrl}`,\r\n\t\tbody: JSON.stringify(transport)\r\n\t   })\r\n\t }\r\n    }\r\n    wsObj.activate()\r\n  }\r\n\r\n  const changeVideoStatus = (stopVideo: boolean) => {\r\n    if (currentLocalStream) {\r\n\t if (stopVideo) {\r\n\t   currentLocalStream.getTracks().forEach((track) => {\r\n\t\ttrack.stop()\r\n\t   })\r\n\t } else {\r\n\t   currentLocalStream.getTracks().forEach((track) => {\r\n\t\tpeerConnection.addTrack(track, currentLocalStream)\r\n\t   })\r\n\t }\r\n    }\r\n  }\r\n\r\n  const initRTC = async (): Promise<boolean> => {\r\n    const url = getUuid(location.pathname)\r\n\r\n    const urlCheckResponse = await http.ensureRoomExists(url)\r\n    setPageStatus(urlCheckResponse.data)\r\n    if (urlCheckResponse && !urlCheckResponse.data) {\r\n\t return false\r\n    }\r\n    try {\r\n\t const constraints = {\r\n\t   \"video\": true,\r\n\t   \"audio\": true\r\n\t }\r\n\t const localStream = await navigator.mediaDevices.getUserMedia(constraints)\r\n\t setLocalStream(localStream)\r\n\t const videoElement = document.querySelector(\"video#localVideo\") as HTMLVideoElement\r\n\t localStream.getTracks().forEach((track) => {\r\n\t   peerConnection.addTrack(track, localStream)\r\n\t })\r\n\t if (videoElement) {\r\n\t   setLocalVideoState(true)\r\n\t   videoElement.srcObject = localStream\r\n\t }\r\n\t return true\r\n    } catch (error) {\r\n\t // eslint-disable-next-line no-console\r\n\t console.error(\"Error accessing media devices.\", error)\r\n\t return false\r\n    }\r\n  }\r\n\r\n  const hangOnRoom = () => {\r\n    peerConnection.close()\r\n    setCallEnded(true)\r\n    if (ws) {\r\n\t const transport = new RtcTransportDTO(currentUserId, groupUrlFromParent, RtcActionEnum.LEAVE_ROOM)\r\n\t ws.publish({\r\n\t   destination: `/app/rtc/${roomUrl}`,\r\n\t   body: JSON.stringify(transport)\r\n\t })\r\n    }\r\n    if (currentLocalStream) {\r\n\t currentLocalStream.getTracks().forEach((track) => {\r\n\t   track.stop()\r\n\t })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n\t {\r\n\t   isPageAuthorized ?\r\n\t\t!callEnded &&\r\n\t\t\t<>\r\n\t\t\t\t<Box m={2} display={\"flex\"} justifyContent={\"center\"}>\r\n\t\t\t\t\t<Box m={1}>\r\n\t\t\t\t\t\t<video style={{ display: localVideoReady ? \"block\" : \"none\" }} id=\"localVideo\" width={600}\r\n\t\t\t\t\t\t\t   height={400}\r\n\t\t\t\t\t\t\t   autoPlay playsInline\r\n\t\t\t\t\t\t\t   controls={false}/>\r\n\t\t\t\t  {!localVideoReady &&\r\n\t\t\t\t\t\t  <Skeleton variant={\"rectangular\"} width={600} height={400}/>\r\n\t\t\t\t  }\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box position={\"fixed\"} width={\"100%\"} bottom={\"10px\"} display={\"flex\"} justifyContent={\"center\"}>\r\n\t\t\t\t\t<SoundControl/>\r\n\t\t\t\t\t<VideoControl changeVideoStatus={changeVideoStatus}/>\r\n\t\t\t\t\t<HangUpControl hangOnRoom={hangOnRoom}/>\r\n\t\t\t\t</Box>\r\n\t\t\t</>\r\n\t\t:\r\n\t\t<EmptyRoom/>\r\n\t }\r\n\t {\r\n\t   callEnded && <CallEnded/>\r\n\t }\r\n    </Box>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}