{"ast":null,"code":"export function UUIDv4() {\n  const digitArray = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n  const alphanumericArray = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n  const rx = \"x\";\n  return \"xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx\".replaceAll(rx, () => {\n    const array = alphanumericArray.concat(alphanumericArray);\n    array.push(...digitArray);\n    return array[Math.floor(Math.random() * array.length)];\n  });\n}\n_c = UUIDv4;\nexport function isStringUUIDType(str) {\n  const regex = new RegExp(/^[\\da-fA-F]{8}\\b-[\\da-fA-F]{4}\\b-[\\da-fA-F]{4}\\b-[\\da-fA-F]{4}\\b-[\\da-fA-F]{12}$/);\n  return regex.test(str);\n}\nvar _c;\n$RefreshReg$(_c, \"UUIDv4\");","map":{"version":3,"names":["UUIDv4","digitArray","alphanumericArray","rx","replaceAll","array","concat","push","Math","floor","random","length","isStringUUIDType","str","regex","RegExp","test"],"sources":["C:/Users/Tung Thanh/Desktop/Project_HPT/react-spring-messenger-project/Client/src/utils/uuid-generator.ts"],"sourcesContent":["export function UUIDv4 (): string {\r\n  const digitArray: string[] = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\r\n  const alphanumericArray = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\r\n  const rx = \"x\"\r\n  return \"xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx\".replaceAll(rx, () => {\r\n    const array = alphanumericArray.concat(alphanumericArray)\r\n    array.push(...digitArray)\r\n    return array[Math.floor(Math.random() * array.length)]\r\n  })\r\n}\r\n\r\nexport function isStringUUIDType (str: string): boolean {\r\n  const regex = new RegExp(/^[\\da-fA-F]{8}\\b-[\\da-fA-F]{4}\\b-[\\da-fA-F]{4}\\b-[\\da-fA-F]{4}\\b-[\\da-fA-F]{12}$/)\r\n  return regex.test(str)\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,MAAM,GAAY;EAChC,MAAMC,UAAoB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC/E,MAAMC,iBAAiB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC5J,MAAMC,EAAE,GAAG,GAAG;EACd,OAAO,oCAAoC,CAACC,UAAU,CAACD,EAAE,EAAE,MAAM;IAC/D,MAAME,KAAK,GAAGH,iBAAiB,CAACI,MAAM,CAACJ,iBAAiB,CAAC;IACzDG,KAAK,CAACE,IAAI,CAAC,GAAGN,UAAU,CAAC;IACzB,OAAOI,KAAK,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGL,KAAK,CAACM,MAAM,CAAC,CAAC;EACxD,CAAC,CAAC;AACJ;AAAC,KATeX,MAAM;AAWtB,OAAO,SAASY,gBAAgB,CAAEC,GAAW,EAAW;EACtD,MAAMC,KAAK,GAAG,IAAIC,MAAM,CAAC,kFAAkF,CAAC;EAC5G,OAAOD,KAAK,CAACE,IAAI,CAACH,GAAG,CAAC;AACxB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}